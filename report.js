

  Token
    addLiquidity
=aaaaaaaa===>> Contract {
  interface: Interface {
    fragments: [
      [ConstructorFragment], [EventFragment],
      [EventFragment],       [EventFragment],
      [FunctionFragment],    [FunctionFragment],
      [FunctionFragment],    [FunctionFragment],
      [FunctionFragment],    [FunctionFragment],
      [FunctionFragment],    [FunctionFragment],
      [FunctionFragment],    [FunctionFragment],
      [FunctionFragment],    [FunctionFragment],
      [FunctionFragment],    [FunctionFragment],
      [FunctionFragment],    [FunctionFragment],
      [FunctionFragment],    [FunctionFragment],
      [FunctionFragment],    [FunctionFragment],
      [FunctionFragment]
    ],
    _abiCoder: AbiCoder { coerceFunc: null },
    functions: {
      'addLiquidity(uint256)': [FunctionFragment],
      'allowance(address,address)': [FunctionFragment],
      'approve(address,uint256)': [FunctionFragment],
      'balanceOf(address)': [FunctionFragment],
      'decimals()': [FunctionFragment],
      'decreaseAllowance(address,uint256)': [FunctionFragment],
      'getAmount(uint256,uint256,uint256)': [FunctionFragment],
      'getBalance()': [FunctionFragment],
      'getEthAmount(uint256)': [FunctionFragment],
      'getPrice(uint256,uint256)': [FunctionFragment],
      'getReserve()': [FunctionFragment],
      'getTokenAmount(uint256)': [FunctionFragment],
      'increaseAllowance(address,uint256)': [FunctionFragment],
      'name()': [FunctionFragment],
      'swapEth2Token(uint256)': [FunctionFragment],
      'swapToken2Eth(uint256,uint256)': [FunctionFragment],
      'symbol()': [FunctionFragment],
      'tokenAddress()': [FunctionFragment],
      'totalSupply()': [FunctionFragment],
      'transfer(address,uint256)': [FunctionFragment],
      'transferFrom(address,address,uint256)': [FunctionFragment]
    },
    errors: {},
    events: {
      'Approval(address,address,uint256)': [EventFragment],
      'From(address)': [EventFragment],
      'Transfer(address,address,uint256)': [EventFragment]
    },
    structs: {},
    deploy: ConstructorFragment {
      name: null,
      type: 'constructor',
      inputs: [Array],
      payable: false,
      stateMutability: 'nonpayable',
      gas: null,
      _isFragment: true
    },
    _isInterface: true
  },
  provider: EthersProviderWrapper {
    _isProvider: true,
    _events: [],
    _emitted: {
      block: -2,
      't:0x94dbf07128cffad264ce4a75ccd18a8da6207518f122c4f1722e343e3fecde2a': 1
    },
    disableCcipRead: false,
    formatter: Formatter { formats: [Object] },
    anyNetwork: false,
    _networkPromise: Promise { [Object] },
    _maxInternalBlockNumber: 0,
    _lastBlockNumber: -2,
    _maxFilterBlockRange: 10,
    _pollingInterval: 4000,
    _fastQueryDate: 1652546503836,
    connection: { url: 'http://localhost:8545' },
    _nextId: 42,
    _hardhatProvider: BackwardsCompatibilityProviderAdapter {
      _wrapped: [FixedGasProvider],
      _provider: [FixedGasProvider],
      sendAsync: [Function: bound sendAsync],
      send: [Function: bound send],
      _sendJsonRpcRequest: [Function: bound _sendJsonRpcRequest] AsyncFunction
    },
    _eventLoopCache: { detectNetwork: [Promise] },
    _network: { chainId: 31337, name: 'unknown' },
    _internalBlockNumber: Promise { [Object] },
    _fastBlockNumber: 0,
    _fastBlockNumberPromise: Promise { 0 }
  },
  signer: SignerWithAddress {
    _isSigner: true,
    address: '0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266',
    _signer: JsonRpcSigner {
      _isSigner: true,
      provider: [EthersProviderWrapper],
      _address: '0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266',
      _index: null
    },
    provider: EthersProviderWrapper {
      _isProvider: true,
      _events: [],
      _emitted: [Object],
      disableCcipRead: false,
      formatter: [Formatter],
      anyNetwork: false,
      _networkPromise: [Promise],
      _maxInternalBlockNumber: 0,
      _lastBlockNumber: -2,
      _maxFilterBlockRange: 10,
      _pollingInterval: 4000,
      _fastQueryDate: 1652546503836,
      connection: [Object],
      _nextId: 42,
      _hardhatProvider: [BackwardsCompatibilityProviderAdapter],
      _eventLoopCache: [Object],
      _network: [Object],
      _internalBlockNumber: [Promise],
      _fastBlockNumber: 0,
      _fastBlockNumberPromise: [Promise]
    }
  },
  callStatic: {
    'addLiquidity(uint256)': [Function (anonymous)],
    'allowance(address,address)': [Function (anonymous)],
    'approve(address,uint256)': [Function (anonymous)],
    'balanceOf(address)': [Function (anonymous)],
    'decimals()': [Function (anonymous)],
    'decreaseAllowance(address,uint256)': [Function (anonymous)],
    'getAmount(uint256,uint256,uint256)': [Function (anonymous)],
    'getBalance()': [Function (anonymous)],
    'getEthAmount(uint256)': [Function (anonymous)],
    'getPrice(uint256,uint256)': [Function (anonymous)],
    'getReserve()': [Function (anonymous)],
    'getTokenAmount(uint256)': [Function (anonymous)],
    'increaseAllowance(address,uint256)': [Function (anonymous)],
    'name()': [Function (anonymous)],
    'swapEth2Token(uint256)': [Function (anonymous)],
    'swapToken2Eth(uint256,uint256)': [Function (anonymous)],
    'symbol()': [Function (anonymous)],
    'tokenAddress()': [Function (anonymous)],
    'totalSupply()': [Function (anonymous)],
    'transfer(address,uint256)': [Function (anonymous)],
    'transferFrom(address,address,uint256)': [Function (anonymous)],
    addLiquidity: [Function (anonymous)],
    allowance: [Function (anonymous)],
    approve: [Function (anonymous)],
    balanceOf: [Function (anonymous)],
    decimals: [Function (anonymous)],
    decreaseAllowance: [Function (anonymous)],
    getAmount: [Function (anonymous)],
    getBalance: [Function (anonymous)],
    getEthAmount: [Function (anonymous)],
    getPrice: [Function (anonymous)],
    getReserve: [Function (anonymous)],
    getTokenAmount: [Function (anonymous)],
    increaseAllowance: [Function (anonymous)],
    name: [Function (anonymous)],
    swapEth2Token: [Function (anonymous)],
    swapToken2Eth: [Function (anonymous)],
    symbol: [Function (anonymous)],
    tokenAddress: [Function (anonymous)],
    totalSupply: [Function (anonymous)],
    transfer: [Function (anonymous)],
    transferFrom: [Function (anonymous)]
  },
  estimateGas: {
    'addLiquidity(uint256)': [Function (anonymous)],
    'allowance(address,address)': [Function (anonymous)],
    'approve(address,uint256)': [Function (anonymous)],
    'balanceOf(address)': [Function (anonymous)],
    'decimals()': [Function (anonymous)],
    'decreaseAllowance(address,uint256)': [Function (anonymous)],
    'getAmount(uint256,uint256,uint256)': [Function (anonymous)],
    'getBalance()': [Function (anonymous)],
    'getEthAmount(uint256)': [Function (anonymous)],
    'getPrice(uint256,uint256)': [Function (anonymous)],
    'getReserve()': [Function (anonymous)],
    'getTokenAmount(uint256)': [Function (anonymous)],
    'increaseAllowance(address,uint256)': [Function (anonymous)],
    'name()': [Function (anonymous)],
    'swapEth2Token(uint256)': [Function (anonymous)],
    'swapToken2Eth(uint256,uint256)': [Function (anonymous)],
    'symbol()': [Function (anonymous)],
    'tokenAddress()': [Function (anonymous)],
    'totalSupply()': [Function (anonymous)],
    'transfer(address,uint256)': [Function (anonymous)],
    'transferFrom(address,address,uint256)': [Function (anonymous)],
    addLiquidity: [Function (anonymous)],
    allowance: [Function (anonymous)],
    approve: [Function (anonymous)],
    balanceOf: [Function (anonymous)],
    decimals: [Function (anonymous)],
    decreaseAllowance: [Function (anonymous)],
    getAmount: [Function (anonymous)],
    getBalance: [Function (anonymous)],
    getEthAmount: [Function (anonymous)],
    getPrice: [Function (anonymous)],
    getReserve: [Function (anonymous)],
    getTokenAmount: [Function (anonymous)],
    increaseAllowance: [Function (anonymous)],
    name: [Function (anonymous)],
    swapEth2Token: [Function (anonymous)],
    swapToken2Eth: [Function (anonymous)],
    symbol: [Function (anonymous)],
    tokenAddress: [Function (anonymous)],
    totalSupply: [Function (anonymous)],
    transfer: [Function (anonymous)],
    transferFrom: [Function (anonymous)]
  },
  functions: {
    'addLiquidity(uint256)': [Function (anonymous)],
    'allowance(address,address)': [Function (anonymous)],
    'approve(address,uint256)': [Function (anonymous)],
    'balanceOf(address)': [Function (anonymous)],
    'decimals()': [Function (anonymous)],
    'decreaseAllowance(address,uint256)': [Function (anonymous)],
    'getAmount(uint256,uint256,uint256)': [Function (anonymous)],
    'getBalance()': [Function (anonymous)],
    'getEthAmount(uint256)': [Function (anonymous)],
    'getPrice(uint256,uint256)': [Function (anonymous)],
    'getReserve()': [Function (anonymous)],
    'getTokenAmount(uint256)': [Function (anonymous)],
    'increaseAllowance(address,uint256)': [Function (anonymous)],
    'name()': [Function (anonymous)],
    'swapEth2Token(uint256)': [Function (anonymous)],
    'swapToken2Eth(uint256,uint256)': [Function (anonymous)],
    'symbol()': [Function (anonymous)],
    'tokenAddress()': [Function (anonymous)],
    'totalSupply()': [Function (anonymous)],
    'transfer(address,uint256)': [Function (anonymous)],
    'transferFrom(address,address,uint256)': [Function (anonymous)],
    addLiquidity: [Function (anonymous)],
    allowance: [Function (anonymous)],
    approve: [Function (anonymous)],
    balanceOf: [Function (anonymous)],
    decimals: [Function (anonymous)],
    decreaseAllowance: [Function (anonymous)],
    getAmount: [Function (anonymous)],
    getBalance: [Function (anonymous)],
    getEthAmount: [Function (anonymous)],
    getPrice: [Function (anonymous)],
    getReserve: [Function (anonymous)],
    getTokenAmount: [Function (anonymous)],
    increaseAllowance: [Function (anonymous)],
    name: [Function (anonymous)],
    swapEth2Token: [Function (anonymous)],
    swapToken2Eth: [Function (anonymous)],
    symbol: [Function (anonymous)],
    tokenAddress: [Function (anonymous)],
    totalSupply: [Function (anonymous)],
    transfer: [Function (anonymous)],
    transferFrom: [Function (anonymous)]
  },
  populateTransaction: {
    'addLiquidity(uint256)': [Function (anonymous)],
    'allowance(address,address)': [Function (anonymous)],
    'approve(address,uint256)': [Function (anonymous)],
    'balanceOf(address)': [Function (anonymous)],
    'decimals()': [Function (anonymous)],
    'decreaseAllowance(address,uint256)': [Function (anonymous)],
    'getAmount(uint256,uint256,uint256)': [Function (anonymous)],
    'getBalance()': [Function (anonymous)],
    'getEthAmount(uint256)': [Function (anonymous)],
    'getPrice(uint256,uint256)': [Function (anonymous)],
    'getReserve()': [Function (anonymous)],
    'getTokenAmount(uint256)': [Function (anonymous)],
    'increaseAllowance(address,uint256)': [Function (anonymous)],
    'name()': [Function (anonymous)],
    'swapEth2Token(uint256)': [Function (anonymous)],
    'swapToken2Eth(uint256,uint256)': [Function (anonymous)],
    'symbol()': [Function (anonymous)],
    'tokenAddress()': [Function (anonymous)],
    'totalSupply()': [Function (anonymous)],
    'transfer(address,uint256)': [Function (anonymous)],
    'transferFrom(address,address,uint256)': [Function (anonymous)],
    addLiquidity: [Function (anonymous)],
    allowance: [Function (anonymous)],
    approve: [Function (anonymous)],
    balanceOf: [Function (anonymous)],
    decimals: [Function (anonymous)],
    decreaseAllowance: [Function (anonymous)],
    getAmount: [Function (anonymous)],
    getBalance: [Function (anonymous)],
    getEthAmount: [Function (anonymous)],
    getPrice: [Function (anonymous)],
    getReserve: [Function (anonymous)],
    getTokenAmount: [Function (anonymous)],
    increaseAllowance: [Function (anonymous)],
    name: [Function (anonymous)],
    swapEth2Token: [Function (anonymous)],
    swapToken2Eth: [Function (anonymous)],
    symbol: [Function (anonymous)],
    tokenAddress: [Function (anonymous)],
    totalSupply: [Function (anonymous)],
    transfer: [Function (anonymous)],
    transferFrom: [Function (anonymous)]
  },
  filters: {
    'Approval(address,address,uint256)': [Function (anonymous)],
    'From(address)': [Function (anonymous)],
    'Transfer(address,address,uint256)': [Function (anonymous)],
    Approval: [Function (anonymous)],
    From: [Function (anonymous)],
    Transfer: [Function (anonymous)]
  },
  _runningEvents: {},
  _wrappedEmits: {},
  address: '0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512',
  resolvedAddress: Promise { '0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512' },
  'addLiquidity(uint256)': [Function (anonymous)],
  'allowance(address,address)': [Function (anonymous)],
  'approve(address,uint256)': [Function (anonymous)],
  'balanceOf(address)': [Function (anonymous)],
  'decimals()': [Function (anonymous)],
  'decreaseAllowance(address,uint256)': [Function (anonymous)],
  'getAmount(uint256,uint256,uint256)': [Function (anonymous)],
  'getBalance()': [Function (anonymous)],
  'getEthAmount(uint256)': [Function (anonymous)],
  'getPrice(uint256,uint256)': [Function (anonymous)],
  'getReserve()': [Function (anonymous)],
  'getTokenAmount(uint256)': [Function (anonymous)],
  'increaseAllowance(address,uint256)': [Function (anonymous)],
  'name()': [Function (anonymous)],
  'swapEth2Token(uint256)': [Function (anonymous)],
  'swapToken2Eth(uint256,uint256)': [Function (anonymous)],
  'symbol()': [Function (anonymous)],
  'tokenAddress()': [Function (anonymous)],
  'totalSupply()': [Function (anonymous)],
  'transfer(address,uint256)': [Function (anonymous)],
  'transferFrom(address,address,uint256)': [Function (anonymous)],
  addLiquidity: [Function (anonymous)],
  allowance: [Function (anonymous)],
  approve: [Function (anonymous)],
  balanceOf: [Function (anonymous)],
  decimals: [Function (anonymous)],
  decreaseAllowance: [Function (anonymous)],
  getAmount: [Function (anonymous)],
  getBalance: [Function (anonymous)],
  getEthAmount: [Function (anonymous)],
  getPrice: [Function (anonymous)],
  getReserve: [Function (anonymous)],
  getTokenAmount: [Function (anonymous)],
  increaseAllowance: [Function (anonymous)],
  name: [Function (anonymous)],
  swapEth2Token: [Function (anonymous)],
  swapToken2Eth: [Function (anonymous)],
  symbol: [Function (anonymous)],
  tokenAddress: [Function (anonymous)],
  totalSupply: [Function (anonymous)],
  transfer: [Function (anonymous)],
  transferFrom: [Function (anonymous)],
  deployTransaction: {
    hash: '0xead4c9723ae054a06cd9757b238c781564d9e6d18d423d2be736864812d563d0',
    type: 2,
    accessList: [],
    blockHash: '0x2c8e439d374db562cbe313dd7b5f763a0d160bc59dac038558f8280ed2ce8aaa',
    blockNumber: 2,
    transactionIndex: 0,
    confirmations: 1,
    from: '0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266',
    gasPrice: BigNumber { value: "1774703563" },
    maxPriorityFeePerGas: BigNumber { value: "1000000000" },
    maxFeePerGas: BigNumber { value: "2549407126" },
    gasLimit: BigNumber { value: "2252546" },
    to: null,
    value: BigNumber { value: "0" },
    nonce: 1,
    data: '',
    r: '0x52ad1ca13872a822fa37b9f74da76f8088194b045e5e6c6a6913da0cc0336b07',
    s: '0x74dbe3be21b1ddb19a6ebd0eadb43a69888e88a1ee7f9bbd77050406a104d315',
    v: 1,
    creates: '0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512',
    chainId: 31337,
    wait: [Function (anonymous)]
  }
} <ref *1> Contract {
  interface: Interface {
    fragments: [
      [ConstructorFragment],
      [EventFragment],
      [EventFragment],
      [FunctionFragment],
      [FunctionFragment],
      [FunctionFragment],
      [FunctionFragment],
      [FunctionFragment],
      [FunctionFragment],
      [FunctionFragment],
      [FunctionFragment],
      [FunctionFragment],
      [FunctionFragment],
      [FunctionFragment]
    ],
    _abiCoder: AbiCoder { coerceFunc: null },
    functions: {
      'allowance(address,address)': [FunctionFragment],
      'approve(address,uint256)': [FunctionFragment],
      'balanceOf(address)': [FunctionFragment],
      'decimals()': [FunctionFragment],
      'decreaseAllowance(address,uint256)': [FunctionFragment],
      'increaseAllowance(address,uint256)': [FunctionFragment],
      'name()': [FunctionFragment],
      'symbol()': [FunctionFragment],
      'totalSupply()': [FunctionFragment],
      'transfer(address,uint256)': [FunctionFragment],
      'transferFrom(address,address,uint256)': [FunctionFragment]
    },
    errors: {},
    events: {
      'Approval(address,address,uint256)': [EventFragment],
      'Transfer(address,address,uint256)': [EventFragment]
    },
    structs: {},
    deploy: ConstructorFragment {
      name: null,
      type: 'constructor',
      inputs: [Array],
      payable: false,
      stateMutability: 'nonpayable',
      gas: null,
      _isFragment: true
    },
    _isInterface: true
  },
  provider: EthersProviderWrapper {
    _isProvider: true,
    _events: [],
    _emitted: {
      block: -2,
      't:0x94dbf07128cffad264ce4a75ccd18a8da6207518f122c4f1722e343e3fecde2a': 1
    },
    disableCcipRead: false,
    formatter: Formatter { formats: [Object] },
    anyNetwork: false,
    _networkPromise: Promise { [Object] },
    _maxInternalBlockNumber: 0,
    _lastBlockNumber: -2,
    _maxFilterBlockRange: 10,
    _pollingInterval: 4000,
    _fastQueryDate: 1652546503836,
    connection: { url: 'http://localhost:8545' },
    _nextId: 42,
    _hardhatProvider: BackwardsCompatibilityProviderAdapter {
      _wrapped: [FixedGasProvider],
      _provider: [FixedGasProvider],
      sendAsync: [Function: bound sendAsync],
      send: [Function: bound send],
      _sendJsonRpcRequest: [Function: bound _sendJsonRpcRequest] AsyncFunction
    },
    _eventLoopCache: { detectNetwork: [Promise] },
    _network: { chainId: 31337, name: 'unknown' },
    _internalBlockNumber: Promise { [Object] },
    _fastBlockNumber: 0,
    _fastBlockNumberPromise: Promise { 0 }
  },
  signer: SignerWithAddress {
    _isSigner: true,
    address: '0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266',
    _signer: JsonRpcSigner {
      _isSigner: true,
      provider: [EthersProviderWrapper],
      _address: '0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266',
      _index: null
    },
    provider: EthersProviderWrapper {
      _isProvider: true,
      _events: [],
      _emitted: [Object],
      disableCcipRead: false,
      formatter: [Formatter],
      anyNetwork: false,
      _networkPromise: [Promise],
      _maxInternalBlockNumber: 0,
      _lastBlockNumber: -2,
      _maxFilterBlockRange: 10,
      _pollingInterval: 4000,
      _fastQueryDate: 1652546503836,
      connection: [Object],
      _nextId: 42,
      _hardhatProvider: [BackwardsCompatibilityProviderAdapter],
      _eventLoopCache: [Object],
      _network: [Object],
      _internalBlockNumber: [Promise],
      _fastBlockNumber: 0,
      _fastBlockNumberPromise: [Promise]
    }
  },
  callStatic: {
    'allowance(address,address)': [Function (anonymous)],
    'approve(address,uint256)': [Function (anonymous)],
    'balanceOf(address)': [Function (anonymous)],
    'decimals()': [Function (anonymous)],
    'decreaseAllowance(address,uint256)': [Function (anonymous)],
    'increaseAllowance(address,uint256)': [Function (anonymous)],
    'name()': [Function (anonymous)],
    'symbol()': [Function (anonymous)],
    'totalSupply()': [Function (anonymous)],
    'transfer(address,uint256)': [Function (anonymous)],
    'transferFrom(address,address,uint256)': [Function (anonymous)],
    allowance: [Function (anonymous)],
    approve: [Function (anonymous)],
    balanceOf: [Function (anonymous)],
    decimals: [Function (anonymous)],
    decreaseAllowance: [Function (anonymous)],
    increaseAllowance: [Function (anonymous)],
    name: [Function (anonymous)],
    symbol: [Function (anonymous)],
    totalSupply: [Function (anonymous)],
    transfer: [Function (anonymous)],
    transferFrom: [Function (anonymous)]
  },
  estimateGas: {
    'allowance(address,address)': [Function (anonymous)],
    'approve(address,uint256)': [Function (anonymous)],
    'balanceOf(address)': [Function (anonymous)],
    'decimals()': [Function (anonymous)],
    'decreaseAllowance(address,uint256)': [Function (anonymous)],
    'increaseAllowance(address,uint256)': [Function (anonymous)],
    'name()': [Function (anonymous)],
    'symbol()': [Function (anonymous)],
    'totalSupply()': [Function (anonymous)],
    'transfer(address,uint256)': [Function (anonymous)],
    'transferFrom(address,address,uint256)': [Function (anonymous)],
    allowance: [Function (anonymous)],
    approve: [Function (anonymous)],
    balanceOf: [Function (anonymous)],
    decimals: [Function (anonymous)],
    decreaseAllowance: [Function (anonymous)],
    increaseAllowance: [Function (anonymous)],
    name: [Function (anonymous)],
    symbol: [Function (anonymous)],
    totalSupply: [Function (anonymous)],
    transfer: [Function (anonymous)],
    transferFrom: [Function (anonymous)]
  },
  functions: {
    'allowance(address,address)': [Function (anonymous)],
    'approve(address,uint256)': [Function (anonymous)],
    'balanceOf(address)': [Function (anonymous)],
    'decimals()': [Function (anonymous)],
    'decreaseAllowance(address,uint256)': [Function (anonymous)],
    'increaseAllowance(address,uint256)': [Function (anonymous)],
    'name()': [Function (anonymous)],
    'symbol()': [Function (anonymous)],
    'totalSupply()': [Function (anonymous)],
    'transfer(address,uint256)': [Function (anonymous)],
    'transferFrom(address,address,uint256)': [Function (anonymous)],
    allowance: [Function (anonymous)],
    approve: [Function (anonymous)],
    balanceOf: [Function (anonymous)],
    decimals: [Function (anonymous)],
    decreaseAllowance: [Function (anonymous)],
    increaseAllowance: [Function (anonymous)],
    name: [Function (anonymous)],
    symbol: [Function (anonymous)],
    totalSupply: [Function (anonymous)],
    transfer: [Function (anonymous)],
    transferFrom: [Function (anonymous)]
  },
  populateTransaction: {
    'allowance(address,address)': [Function (anonymous)],
    'approve(address,uint256)': [Function (anonymous)],
    'balanceOf(address)': [Function (anonymous)],
    'decimals()': [Function (anonymous)],
    'decreaseAllowance(address,uint256)': [Function (anonymous)],
    'increaseAllowance(address,uint256)': [Function (anonymous)],
    'name()': [Function (anonymous)],
    'symbol()': [Function (anonymous)],
    'totalSupply()': [Function (anonymous)],
    'transfer(address,uint256)': [Function (anonymous)],
    'transferFrom(address,address,uint256)': [Function (anonymous)],
    allowance: [Function (anonymous)],
    approve: [Function (anonymous)],
    balanceOf: [Function (anonymous)],
    decimals: [Function (anonymous)],
    decreaseAllowance: [Function (anonymous)],
    increaseAllowance: [Function (anonymous)],
    name: [Function (anonymous)],
    symbol: [Function (anonymous)],
    totalSupply: [Function (anonymous)],
    transfer: [Function (anonymous)],
    transferFrom: [Function (anonymous)]
  },
  filters: {
    'Approval(address,address,uint256)': [Function (anonymous)],
    'Transfer(address,address,uint256)': [Function (anonymous)],
    Approval: [Function (anonymous)],
    Transfer: [Function (anonymous)]
  },
  _runningEvents: {},
  _wrappedEmits: {},
  address: '0x5FbDB2315678afecb367f032d93F642f64180aa3',
  resolvedAddress: Promise { '0x5FbDB2315678afecb367f032d93F642f64180aa3' },
  'allowance(address,address)': [Function (anonymous)],
  'approve(address,uint256)': [Function (anonymous)],
  'balanceOf(address)': [Function (anonymous)],
  'decimals()': [Function (anonymous)],
  'decreaseAllowance(address,uint256)': [Function (anonymous)],
  'increaseAllowance(address,uint256)': [Function (anonymous)],
  'name()': [Function (anonymous)],
  'symbol()': [Function (anonymous)],
  'totalSupply()': [Function (anonymous)],
  'transfer(address,uint256)': [Function (anonymous)],
  'transferFrom(address,address,uint256)': [Function (anonymous)],
  allowance: [Function (anonymous)],
  approve: [Function (anonymous)],
  balanceOf: [Function (anonymous)],
  decimals: [Function (anonymous)],
  decreaseAllowance: [Function (anonymous)],
  increaseAllowance: [Function (anonymous)],
  name: [Function (anonymous)],
  symbol: [Function (anonymous)],
  totalSupply: [Function (anonymous)],
  transfer: [Function (anonymous)],
  transferFrom: [Function (anonymous)],
  deployTransaction: {
    hash: '0x94dbf07128cffad264ce4a75ccd18a8da6207518f122c4f1722e343e3fecde2a',
    type: 2,
    accessList: [],
    blockHash: '0xf1c5258370db9ed6897e229db6e6f4f6892aaa76350616f4507ac6ee8b871863',
    blockNumber: 1,
    transactionIndex: 0,
    confirmations: 1,
    from: '0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266',
    gasPrice: BigNumber { value: "1875000000" },
    maxPriorityFeePerGas: BigNumber { value: "1000000000" },
    maxFeePerGas: BigNumber { value: "2750000000" },
    gasLimit: BigNumber { value: "1245060" },
    to: null,
    value: BigNumber { value: "0" },
    nonce: 0,
    data: '0x60806040523480156200001157600080fd5b5060405162001a1938038062001a1983398181016040528101906200003791906200032b565b8282816003908051906020019062000051929190620001f2565b5080600490805190602001906200006a929190620001f2565b5050506200007f33826200008860201b60201c565b50505062000684565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415620000fb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000f290620003eb565b60405180910390fd5b6200010f60008383620001ed60201b60201c565b80600260008282546200012391906200049a565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546200017a91906200049a565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051620001e191906200040d565b60405180910390a35050565b505050565b828054620002009062000537565b90600052602060002090601f01602090048101928262000224576000855562000270565b82601f106200023f57805160ff191683800117855562000270565b8280016001018555821562000270579182015b828111156200026f57825182559160200191906001019062000252565b5b5090506200027f919062000283565b5090565b5b808211156200029e57600081600090555060010162000284565b5090565b6000620002b9620002b38462000453565b6200042a565b905082815260208101848484011115620002d257600080fd5b620002df84828562000501565b509392505050565b600082601f830112620002f957600080fd5b81516200030b848260208601620002a2565b91505092915050565b60008151905062000325816200066a565b92915050565b6000806000606084860312156200034157600080fd5b600084015167ffffffffffffffff8111156200035c57600080fd5b6200036a86828701620002e7565b935050602084015167ffffffffffffffff8111156200038857600080fd5b6200039686828701620002e7565b9250506040620003a98682870162000314565b9150509250925092565b6000620003c2601f8362000489565b9150620003cf8262000641565b602082019050919050565b620003e581620004f7565b82525050565b600060208201905081810360008301526200040681620003b3565b9050919050565b6000602082019050620004246000830184620003da565b92915050565b60006200043662000449565b90506200044482826200056d565b919050565b6000604051905090565b600067ffffffffffffffff82111562000471576200047062000601565b5b6200047c8262000630565b9050602081019050919050565b600082825260208201905092915050565b6000620004a782620004f7565b9150620004b483620004f7565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115620004ec57620004eb620005a3565b5b828201905092915050565b6000819050919050565b60005b838110156200052157808201518184015260208101905062000504565b8381111562000531576000848401525b50505050565b600060028204905060018216806200055057607f821691505b60208210811415620005675762000566620005d2565b5b50919050565b620005788262000630565b810181811067ffffffffffffffff821117156200059a576200059962000601565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b6200067581620004f7565b81146200068157600080fd5b50565b61138580620006946000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461016857806370a082311461019857806395d89b41146101c8578063a457c2d7146101e6578063a9059cbb14610216578063dd62ed3e14610246576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610276565b6040516100c39190610e25565b60405180910390f35b6100e660048036038101906100e19190610c73565b610308565b6040516100f39190610e0a565b60405180910390f35b610104610326565b6040516101119190610f27565b60405180910390f35b610134600480360381019061012f9190610c24565b610330565b6040516101419190610e0a565b60405180910390f35b610152610428565b60405161015f9190610f42565b60405180910390f35b610182600480360381019061017d9190610c73565b610431565b60405161018f9190610e0a565b60405180910390f35b6101b260048036038101906101ad9190610bbf565b6104dd565b6040516101bf9190610f27565b60405180910390f35b6101d0610525565b6040516101dd9190610e25565b60405180910390f35b61020060048036038101906101fb9190610c73565b6105b7565b60405161020d9190610e0a565b60405180910390f35b610230600480360381019061022b9190610c73565b6106a2565b60405161023d9190610e0a565b60405180910390f35b610260600480360381019061025b9190610be8565b6106c0565b60405161026d9190610f27565b60405180910390f35b60606003805461028590611057565b80601f01602080910402602001604051908101604052809291908181526020018280546102b190611057565b80156102fe5780601f106102d3576101008083540402835291602001916102fe565b820191906000526020600020905b8154815290600101906020018083116102e157829003601f168201915b5050505050905090565b600061031c610315610747565b848461074f565b6001905092915050565b6000600254905090565b600061033d84848461091a565b6000600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000610388610747565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015610408576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ff90610ea7565b60405180910390fd5b61041c85610414610747565b85840361074f565b60019150509392505050565b60006012905090565b60006104d361043e610747565b84846001600061044c610747565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546104ce9190610f79565b61074f565b6001905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606004805461053490611057565b80601f016020809104026020016040519081016040528092919081815260200182805461056090611057565b80156105ad5780601f10610582576101008083540402835291602001916105ad565b820191906000526020600020905b81548152906001019060200180831161059057829003601f168201915b5050505050905090565b600080600160006105c6610747565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015610683576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067a90610f07565b60405180910390fd5b61069761068e610747565b8585840361074f565b600191505092915050565b60006106b66106af610747565b848461091a565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156107bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b690610ee7565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561082f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082690610e67565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258360405161090d9190610f27565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561098a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161098190610ec7565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156109fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109f190610e47565b60405180910390fd5b610a05838383610b90565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610a8b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a8290610e87565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610b1e9190610f79565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610b829190610f27565b60405180910390a350505050565b505050565b600081359050610ba481611321565b92915050565b600081359050610bb981611338565b92915050565b600060208284031215610bd157600080fd5b6000610bdf84828501610b95565b91505092915050565b60008060408385031215610bfb57600080fd5b6000610c0985828601610b95565b9250506020610c1a85828601610b95565b9150509250929050565b600080600060608486031215610c3957600080fd5b6000610c4786828701610b95565b9350506020610c5886828701610b95565b9250506040610c6986828701610baa565b9150509250925092565b60008060408385031215610c8657600080fd5b6000610c9485828601610b95565b9250506020610ca585828601610baa565b9150509250929050565b610cb881610fe1565b82525050565b6000610cc982610f5d565b610cd38185610f68565b9350610ce3818560208601611024565b610cec816110e7565b840191505092915050565b6000610d04602383610f68565b9150610d0f826110f8565b604082019050919050565b6000610d27602283610f68565b9150610d3282611147565b604082019050919050565b6000610d4a602683610f68565b9150610d5582611196565b604082019050919050565b6000610d6d602883610f68565b9150610d78826111e5565b604082019050919050565b6000610d90602583610f68565b9150610d9b82611234565b604082019050919050565b6000610db3602483610f68565b9150610dbe82611283565b604082019050919050565b6000610dd6602583610f68565b9150610de1826112d2565b604082019050919050565b610df58161100d565b82525050565b610e0481611017565b82525050565b6000602082019050610e1f6000830184610caf565b92915050565b60006020820190508181036000830152610e3f8184610cbe565b905092915050565b60006020820190508181036000830152610e6081610cf7565b9050919050565b60006020820190508181036000830152610e8081610d1a565b9050919050565b60006020820190508181036000830152610ea081610d3d565b9050919050565b60006020820190508181036000830152610ec081610d60565b9050919050565b60006020820190508181036000830152610ee081610d83565b9050919050565b60006020820190508181036000830152610f0081610da6565b9050919050565b60006020820190508181036000830152610f2081610dc9565b9050919050565b6000602082019050610f3c6000830184610dec565b92915050565b6000602082019050610f576000830184610dfb565b92915050565b600081519050919050565b600082825260208201905092915050565b6000610f848261100d565b9150610f8f8361100d565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610fc457610fc3611089565b5b828201905092915050565b6000610fda82610fed565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b83811015611042578082015181840152602081019050611027565b83811115611051576000848401525b50505050565b6000600282049050600182168061106f57607f821691505b60208210811415611083576110826110b8565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206160008201527f6c6c6f77616e6365000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b61132a81610fcf565b811461133557600080fd5b50565b6113418161100d565b811461134c57600080fd5b5056fea26469706673582212205b5de9a0d46024191144911e15239614afb2ef1b4d52c5918c080b6d1857d09b64736f6c63430008040033000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000d3c21bcecceda10000000000000000000000000000000000000000000000000000000000000000000005546f6b656e0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002546b000000000000000000000000000000000000000000000000000000000000',
    r: '0x7c06d42c1f2f7ba40d18ae642e9ab8a4ef859f82d3aa6b839194ab69370b376e',
    s: '0x2646a04675276916636c9493eb753c054071af96f874d5043df2f52ef4a38344',
    v: 1,
    creates: '0x5FbDB2315678afecb367f032d93F642f64180aa3',
    chainId: 31337,
    wait: [Function (anonymous)]
  },
  _deployedPromise: Promise { [Circular *1] }
}
=====>>>token exchange address 0x5FbDB2315678afecb367f032d93F642f64180aa3 0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512
++++++>>>> 0x0000000000000000000000000000000000000000 0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266 BigNumber { value: "100000000000000000000" }
========>>>>sender 0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266
      ✔ adds liquidity (5109ms)
    getPrice
=aaaaaaaa===>> Contract {
  interface: Interface {
    fragments: [
      [ConstructorFragment], [EventFragment],
      [EventFragment],       [EventFragment],
      [FunctionFragment],    [FunctionFragment],
      [FunctionFragment],    [FunctionFragment],
      [FunctionFragment],    [FunctionFragment],
      [FunctionFragment],    [FunctionFragment],
      [FunctionFragment],    [FunctionFragment],
      [FunctionFragment],    [FunctionFragment],
      [FunctionFragment],    [FunctionFragment],
      [FunctionFragment],    [FunctionFragment],
      [FunctionFragment],    [FunctionFragment],
      [FunctionFragment],    [FunctionFragment],
      [FunctionFragment]
    ],
    _abiCoder: AbiCoder { coerceFunc: null },
    functions: {
      'addLiquidity(uint256)': [FunctionFragment],
      'allowance(address,address)': [FunctionFragment],
      'approve(address,uint256)': [FunctionFragment],
      'balanceOf(address)': [FunctionFragment],
      'decimals()': [FunctionFragment],
      'decreaseAllowance(address,uint256)': [FunctionFragment],
      'getAmount(uint256,uint256,uint256)': [FunctionFragment],
      'getBalance()': [FunctionFragment],
      'getEthAmount(uint256)': [FunctionFragment],
      'getPrice(uint256,uint256)': [FunctionFragment],
      'getReserve()': [FunctionFragment],
      'getTokenAmount(uint256)': [FunctionFragment],
      'increaseAllowance(address,uint256)': [FunctionFragment],
      'name()': [FunctionFragment],
      'swapEth2Token(uint256)': [FunctionFragment],
      'swapToken2Eth(uint256,uint256)': [FunctionFragment],
      'symbol()': [FunctionFragment],
      'tokenAddress()': [FunctionFragment],
      'totalSupply()': [FunctionFragment],
      'transfer(address,uint256)': [FunctionFragment],
      'transferFrom(address,address,uint256)': [FunctionFragment]
    },
    errors: {},
    events: {
      'Approval(address,address,uint256)': [EventFragment],
      'From(address)': [EventFragment],
      'Transfer(address,address,uint256)': [EventFragment]
    },
    structs: {},
    deploy: ConstructorFragment {
      name: null,
      type: 'constructor',
      inputs: [Array],
      payable: false,
      stateMutability: 'nonpayable',
      gas: null,
      _isFragment: true
    },
    _isInterface: true
  },
  provider: EthersProviderWrapper {
    _isProvider: true,
    _events: [ [Event], [Event] ],
    _emitted: {
      block: 4,
      't:0x94dbf07128cffad264ce4a75ccd18a8da6207518f122c4f1722e343e3fecde2a': 1,
      't:0xead4c9723ae054a06cd9757b238c781564d9e6d18d423d2be736864812d563d0': 2,
      'b:0x430e07ba8642ad51ba9d445af8152799758779d2aa05521b3a8c53d6af18db33': 4,
      't:0x02e6bd02fa02e2c04849d7335812fdbfbbb967b96332acd85d5f19dcf0caa562': 4,
      't:0xe13571ab760c81656bc0514880edc1971f7c242df019066d6d65e3dcb98fc810': 5
    },
    disableCcipRead: false,
    formatter: Formatter { formats: [Object] },
    anyNetwork: false,
    _networkPromise: Promise { [Object] },
    _maxInternalBlockNumber: 4,
    _lastBlockNumber: 4,
    _maxFilterBlockRange: 10,
    _pollingInterval: 4000,
    _fastQueryDate: 1652546508081,
    connection: { url: 'http://localhost:8545' },
    _nextId: 42,
    _hardhatProvider: BackwardsCompatibilityProviderAdapter {
      _wrapped: [FixedGasProvider],
      _provider: [FixedGasProvider],
      sendAsync: [Function: bound sendAsync],
      send: [Function: bound send],
      _sendJsonRpcRequest: [Function: bound _sendJsonRpcRequest] AsyncFunction
    },
    _eventLoopCache: { detectNetwork: [Promise] },
    _network: { chainId: 31337, name: 'unknown' },
    _internalBlockNumber: Promise { [Object] },
    _fastBlockNumber: 4,
    _fastBlockNumberPromise: Promise { 4 },
    _poller: Timeout {
      _idleTimeout: 4000,
      _idlePrev: [TimersList],
      _idleNext: [TimersList],
      _idleStart: 5500,
      _onTimeout: [Function (anonymous)],
      _timerArgs: undefined,
      _repeat: 4000,
      _destroyed: false,
      [Symbol(refed)]: true,
      [Symbol(kHasPrimitive)]: false,
      [Symbol(asyncId)]: 1495,
      [Symbol(triggerId)]: 0
    },
    _bootstrapPoll: null
  },
  signer: SignerWithAddress {
    _isSigner: true,
    address: '0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266',
    _signer: JsonRpcSigner {
      _isSigner: true,
      provider: [EthersProviderWrapper],
      _address: '0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266',
      _index: null
    },
    provider: EthersProviderWrapper {
      _isProvider: true,
      _events: [Array],
      _emitted: [Object],
      disableCcipRead: false,
      formatter: [Formatter],
      anyNetwork: false,
      _networkPromise: [Promise],
      _maxInternalBlockNumber: 4,
      _lastBlockNumber: 4,
      _maxFilterBlockRange: 10,
      _pollingInterval: 4000,
      _fastQueryDate: 1652546508081,
      connection: [Object],
      _nextId: 42,
      _hardhatProvider: [BackwardsCompatibilityProviderAdapter],
      _eventLoopCache: [Object],
      _network: [Object],
      _internalBlockNumber: [Promise],
      _fastBlockNumber: 4,
      _fastBlockNumberPromise: [Promise],
      _poller: Timeout {
        _idleTimeout: 4000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 5500,
        _onTimeout: [Function (anonymous)],
        _timerArgs: undefined,
        _repeat: 4000,
        _destroyed: false,
        [Symbol(refed)]: true,
        [Symbol(kHasPrimitive)]: false,
        [Symbol(asyncId)]: 1495,
        [Symbol(triggerId)]: 0
      },
      _bootstrapPoll: null
    }
  },
  callStatic: {
    'addLiquidity(uint256)': [Function (anonymous)],
    'allowance(address,address)': [Function (anonymous)],
    'approve(address,uint256)': [Function (anonymous)],
    'balanceOf(address)': [Function (anonymous)],
    'decimals()': [Function (anonymous)],
    'decreaseAllowance(address,uint256)': [Function (anonymous)],
    'getAmount(uint256,uint256,uint256)': [Function (anonymous)],
    'getBalance()': [Function (anonymous)],
    'getEthAmount(uint256)': [Function (anonymous)],
    'getPrice(uint256,uint256)': [Function (anonymous)],
    'getReserve()': [Function (anonymous)],
    'getTokenAmount(uint256)': [Function (anonymous)],
    'increaseAllowance(address,uint256)': [Function (anonymous)],
    'name()': [Function (anonymous)],
    'swapEth2Token(uint256)': [Function (anonymous)],
    'swapToken2Eth(uint256,uint256)': [Function (anonymous)],
    'symbol()': [Function (anonymous)],
    'tokenAddress()': [Function (anonymous)],
    'totalSupply()': [Function (anonymous)],
    'transfer(address,uint256)': [Function (anonymous)],
    'transferFrom(address,address,uint256)': [Function (anonymous)],
    addLiquidity: [Function (anonymous)],
    allowance: [Function (anonymous)],
    approve: [Function (anonymous)],
    balanceOf: [Function (anonymous)],
    decimals: [Function (anonymous)],
    decreaseAllowance: [Function (anonymous)],
    getAmount: [Function (anonymous)],
    getBalance: [Function (anonymous)],
    getEthAmount: [Function (anonymous)],
    getPrice: [Function (anonymous)],
    getReserve: [Function (anonymous)],
    getTokenAmount: [Function (anonymous)],
    increaseAllowance: [Function (anonymous)],
    name: [Function (anonymous)],
    swapEth2Token: [Function (anonymous)],
    swapToken2Eth: [Function (anonymous)],
    symbol: [Function (anonymous)],
    tokenAddress: [Function (anonymous)],
    totalSupply: [Function (anonymous)],
    transfer: [Function (anonymous)],
    transferFrom: [Function (anonymous)]
  },
  estimateGas: {
    'addLiquidity(uint256)': [Function (anonymous)],
    'allowance(address,address)': [Function (anonymous)],
    'approve(address,uint256)': [Function (anonymous)],
    'balanceOf(address)': [Function (anonymous)],
    'decimals()': [Function (anonymous)],
    'decreaseAllowance(address,uint256)': [Function (anonymous)],
    'getAmount(uint256,uint256,uint256)': [Function (anonymous)],
    'getBalance()': [Function (anonymous)],
    'getEthAmount(uint256)': [Function (anonymous)],
    'getPrice(uint256,uint256)': [Function (anonymous)],
    'getReserve()': [Function (anonymous)],
    'getTokenAmount(uint256)': [Function (anonymous)],
    'increaseAllowance(address,uint256)': [Function (anonymous)],
    'name()': [Function (anonymous)],
    'swapEth2Token(uint256)': [Function (anonymous)],
    'swapToken2Eth(uint256,uint256)': [Function (anonymous)],
    'symbol()': [Function (anonymous)],
    'tokenAddress()': [Function (anonymous)],
    'totalSupply()': [Function (anonymous)],
    'transfer(address,uint256)': [Function (anonymous)],
    'transferFrom(address,address,uint256)': [Function (anonymous)],
    addLiquidity: [Function (anonymous)],
    allowance: [Function (anonymous)],
    approve: [Function (anonymous)],
    balanceOf: [Function (anonymous)],
    decimals: [Function (anonymous)],
    decreaseAllowance: [Function (anonymous)],
    getAmount: [Function (anonymous)],
    getBalance: [Function (anonymous)],
    getEthAmount: [Function (anonymous)],
    getPrice: [Function (anonymous)],
    getReserve: [Function (anonymous)],
    getTokenAmount: [Function (anonymous)],
    increaseAllowance: [Function (anonymous)],
    name: [Function (anonymous)],
    swapEth2Token: [Function (anonymous)],
    swapToken2Eth: [Function (anonymous)],
    symbol: [Function (anonymous)],
    tokenAddress: [Function (anonymous)],
    totalSupply: [Function (anonymous)],
    transfer: [Function (anonymous)],
    transferFrom: [Function (anonymous)]
  },
  functions: {
    'addLiquidity(uint256)': [Function (anonymous)],
    'allowance(address,address)': [Function (anonymous)],
    'approve(address,uint256)': [Function (anonymous)],
    'balanceOf(address)': [Function (anonymous)],
    'decimals()': [Function (anonymous)],
    'decreaseAllowance(address,uint256)': [Function (anonymous)],
    'getAmount(uint256,uint256,uint256)': [Function (anonymous)],
    'getBalance()': [Function (anonymous)],
    'getEthAmount(uint256)': [Function (anonymous)],
    'getPrice(uint256,uint256)': [Function (anonymous)],
    'getReserve()': [Function (anonymous)],
    'getTokenAmount(uint256)': [Function (anonymous)],
    'increaseAllowance(address,uint256)': [Function (anonymous)],
    'name()': [Function (anonymous)],
    'swapEth2Token(uint256)': [Function (anonymous)],
    'swapToken2Eth(uint256,uint256)': [Function (anonymous)],
    'symbol()': [Function (anonymous)],
    'tokenAddress()': [Function (anonymous)],
    'totalSupply()': [Function (anonymous)],
    'transfer(address,uint256)': [Function (anonymous)],
    'transferFrom(address,address,uint256)': [Function (anonymous)],
    addLiquidity: [Function (anonymous)],
    allowance: [Function (anonymous)],
    approve: [Function (anonymous)],
    balanceOf: [Function (anonymous)],
    decimals: [Function (anonymous)],
    decreaseAllowance: [Function (anonymous)],
    getAmount: [Function (anonymous)],
    getBalance: [Function (anonymous)],
    getEthAmount: [Function (anonymous)],
    getPrice: [Function (anonymous)],
    getReserve: [Function (anonymous)],
    getTokenAmount: [Function (anonymous)],
    increaseAllowance: [Function (anonymous)],
    name: [Function (anonymous)],
    swapEth2Token: [Function (anonymous)],
    swapToken2Eth: [Function (anonymous)],
    symbol: [Function (anonymous)],
    tokenAddress: [Function (anonymous)],
    totalSupply: [Function (anonymous)],
    transfer: [Function (anonymous)],
    transferFrom: [Function (anonymous)]
  },
  populateTransaction: {
    'addLiquidity(uint256)': [Function (anonymous)],
    'allowance(address,address)': [Function (anonymous)],
    'approve(address,uint256)': [Function (anonymous)],
    'balanceOf(address)': [Function (anonymous)],
    'decimals()': [Function (anonymous)],
    'decreaseAllowance(address,uint256)': [Function (anonymous)],
    'getAmount(uint256,uint256,uint256)': [Function (anonymous)],
    'getBalance()': [Function (anonymous)],
    'getEthAmount(uint256)': [Function (anonymous)],
    'getPrice(uint256,uint256)': [Function (anonymous)],
    'getReserve()': [Function (anonymous)],
    'getTokenAmount(uint256)': [Function (anonymous)],
    'increaseAllowance(address,uint256)': [Function (anonymous)],
    'name()': [Function (anonymous)],
    'swapEth2Token(uint256)': [Function (anonymous)],
    'swapToken2Eth(uint256,uint256)': [Function (anonymous)],
    'symbol()': [Function (anonymous)],
    'tokenAddress()': [Function (anonymous)],
    'totalSupply()': [Function (anonymous)],
    'transfer(address,uint256)': [Function (anonymous)],
    'transferFrom(address,address,uint256)': [Function (anonymous)],
    addLiquidity: [Function (anonymous)],
    allowance: [Function (anonymous)],
    approve: [Function (anonymous)],
    balanceOf: [Function (anonymous)],
    decimals: [Function (anonymous)],
    decreaseAllowance: [Function (anonymous)],
    getAmount: [Function (anonymous)],
    getBalance: [Function (anonymous)],
    getEthAmount: [Function (anonymous)],
    getPrice: [Function (anonymous)],
    getReserve: [Function (anonymous)],
    getTokenAmount: [Function (anonymous)],
    increaseAllowance: [Function (anonymous)],
    name: [Function (anonymous)],
    swapEth2Token: [Function (anonymous)],
    swapToken2Eth: [Function (anonymous)],
    symbol: [Function (anonymous)],
    tokenAddress: [Function (anonymous)],
    totalSupply: [Function (anonymous)],
    transfer: [Function (anonymous)],
    transferFrom: [Function (anonymous)]
  },
  filters: {
    'Approval(address,address,uint256)': [Function (anonymous)],
    'From(address)': [Function (anonymous)],
    'Transfer(address,address,uint256)': [Function (anonymous)],
    Approval: [Function (anonymous)],
    From: [Function (anonymous)],
    Transfer: [Function (anonymous)]
  },
  _runningEvents: {},
  _wrappedEmits: {},
  address: '0x5FC8d32690cc91D4c39d9d3abcBD16989F875707',
  resolvedAddress: Promise { '0x5FC8d32690cc91D4c39d9d3abcBD16989F875707' },
  'addLiquidity(uint256)': [Function (anonymous)],
  'allowance(address,address)': [Function (anonymous)],
  'approve(address,uint256)': [Function (anonymous)],
  'balanceOf(address)': [Function (anonymous)],
  'decimals()': [Function (anonymous)],
  'decreaseAllowance(address,uint256)': [Function (anonymous)],
  'getAmount(uint256,uint256,uint256)': [Function (anonymous)],
  'getBalance()': [Function (anonymous)],
  'getEthAmount(uint256)': [Function (anonymous)],
  'getPrice(uint256,uint256)': [Function (anonymous)],
  'getReserve()': [Function (anonymous)],
  'getTokenAmount(uint256)': [Function (anonymous)],
  'increaseAllowance(address,uint256)': [Function (anonymous)],
  'name()': [Function (anonymous)],
  'swapEth2Token(uint256)': [Function (anonymous)],
  'swapToken2Eth(uint256,uint256)': [Function (anonymous)],
  'symbol()': [Function (anonymous)],
  'tokenAddress()': [Function (anonymous)],
  'totalSupply()': [Function (anonymous)],
  'transfer(address,uint256)': [Function (anonymous)],
  'transferFrom(address,address,uint256)': [Function (anonymous)],
  addLiquidity: [Function (anonymous)],
  allowance: [Function (anonymous)],
  approve: [Function (anonymous)],
  balanceOf: [Function (anonymous)],
  decimals: [Function (anonymous)],
  decreaseAllowance: [Function (anonymous)],
  getAmount: [Function (anonymous)],
  getBalance: [Function (anonymous)],
  getEthAmount: [Function (anonymous)],
  getPrice: [Function (anonymous)],
  getReserve: [Function (anonymous)],
  getTokenAmount: [Function (anonymous)],
  increaseAllowance: [Function (anonymous)],
  name: [Function (anonymous)],
  swapEth2Token: [Function (anonymous)],
  swapToken2Eth: [Function (anonymous)],
  symbol: [Function (anonymous)],
  tokenAddress: [Function (anonymous)],
  totalSupply: [Function (anonymous)],
  transfer: [Function (anonymous)],
  transferFrom: [Function (anonymous)],
  deployTransaction: {
    hash: '0xc7a000bdd51eed3130167b1accbb6ff192c0a42ef66add72e67dcaaf84d7d7e0',
    type: 2,
    accessList: [],
    blockHash: '0x308c9e4d80306e54112c19d3ae61c096f00437413481502ee586aced9fa985cc',
    blockNumber: 6,
    transactionIndex: 0,
    confirmations: 1,
    from: '0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266',
    gasPrice: BigNumber { value: "1470088048" },
    maxPriorityFeePerGas: BigNumber { value: "1000000000" },
    maxFeePerGas: BigNumber { value: "1940176096" },
    gasLimit: BigNumber { value: "2252534" },
    to: null,
    value: BigNumber { value: "0" },
    nonce: 5,
    data: '',
    r: '0x181253cdce4e43c92d5278896314b34ce25a4e5ccbcb01443ece885709b24887',
    s: '0x34df16241ece3683456ad999936f9723fef632860bddbf29b4ef830f6e86c6ba',
    v: 0,
    creates: '0x5FC8d32690cc91D4c39d9d3abcBD16989F875707',
    chainId: 31337,
    wait: [Function (anonymous)]
  }
} <ref *1> Contract {
  interface: Interface {
    fragments: [
      [ConstructorFragment],
      [EventFragment],
      [EventFragment],
      [FunctionFragment],
      [FunctionFragment],
      [FunctionFragment],
      [FunctionFragment],
      [FunctionFragment],
      [FunctionFragment],
      [FunctionFragment],
      [FunctionFragment],
      [FunctionFragment],
      [FunctionFragment],
      [FunctionFragment]
    ],
    _abiCoder: AbiCoder { coerceFunc: null },
    functions: {
      'allowance(address,address)': [FunctionFragment],
      'approve(address,uint256)': [FunctionFragment],
      'balanceOf(address)': [FunctionFragment],
      'decimals()': [FunctionFragment],
      'decreaseAllowance(address,uint256)': [FunctionFragment],
      'increaseAllowance(address,uint256)': [FunctionFragment],
      'name()': [FunctionFragment],
      'symbol()': [FunctionFragment],
      'totalSupply()': [FunctionFragment],
      'transfer(address,uint256)': [FunctionFragment],
      'transferFrom(address,address,uint256)': [FunctionFragment]
    },
    errors: {},
    events: {
      'Approval(address,address,uint256)': [EventFragment],
      'Transfer(address,address,uint256)': [EventFragment]
    },
    structs: {},
    deploy: ConstructorFragment {
      name: null,
      type: 'constructor',
      inputs: [Array],
      payable: false,
      stateMutability: 'nonpayable',
      gas: null,
      _isFragment: true
    },
    _isInterface: true
  },
  provider: EthersProviderWrapper {
    _isProvider: true,
    _events: [ [Event], [Event] ],
    _emitted: {
      block: 4,
      't:0x94dbf07128cffad264ce4a75ccd18a8da6207518f122c4f1722e343e3fecde2a': 1,
      't:0xead4c9723ae054a06cd9757b238c781564d9e6d18d423d2be736864812d563d0': 2,
      'b:0x430e07ba8642ad51ba9d445af8152799758779d2aa05521b3a8c53d6af18db33': 4,
      't:0x02e6bd02fa02e2c04849d7335812fdbfbbb967b96332acd85d5f19dcf0caa562': 4,
      't:0xe13571ab760c81656bc0514880edc1971f7c242df019066d6d65e3dcb98fc810': 5
    },
    disableCcipRead: false,
    formatter: Formatter { formats: [Object] },
    anyNetwork: false,
    _networkPromise: Promise { [Object] },
    _maxInternalBlockNumber: 4,
    _lastBlockNumber: 4,
    _maxFilterBlockRange: 10,
    _pollingInterval: 4000,
    _fastQueryDate: 1652546508081,
    connection: { url: 'http://localhost:8545' },
    _nextId: 42,
    _hardhatProvider: BackwardsCompatibilityProviderAdapter {
      _wrapped: [FixedGasProvider],
      _provider: [FixedGasProvider],
      sendAsync: [Function: bound sendAsync],
      send: [Function: bound send],
      _sendJsonRpcRequest: [Function: bound _sendJsonRpcRequest] AsyncFunction
    },
    _eventLoopCache: { detectNetwork: [Promise] },
    _network: { chainId: 31337, name: 'unknown' },
    _internalBlockNumber: Promise { [Object] },
    _fastBlockNumber: 4,
    _fastBlockNumberPromise: Promise { 4 },
    _poller: Timeout {
      _idleTimeout: 4000,
      _idlePrev: [TimersList],
      _idleNext: [TimersList],
      _idleStart: 5500,
      _onTimeout: [Function (anonymous)],
      _timerArgs: undefined,
      _repeat: 4000,
      _destroyed: false,
      [Symbol(refed)]: true,
      [Symbol(kHasPrimitive)]: false,
      [Symbol(asyncId)]: 1495,
      [Symbol(triggerId)]: 0
    },
    _bootstrapPoll: null
  },
  signer: SignerWithAddress {
    _isSigner: true,
    address: '0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266',
    _signer: JsonRpcSigner {
      _isSigner: true,
      provider: [EthersProviderWrapper],
      _address: '0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266',
      _index: null
    },
    provider: EthersProviderWrapper {
      _isProvider: true,
      _events: [Array],
      _emitted: [Object],
      disableCcipRead: false,
      formatter: [Formatter],
      anyNetwork: false,
      _networkPromise: [Promise],
      _maxInternalBlockNumber: 4,
      _lastBlockNumber: 4,
      _maxFilterBlockRange: 10,
      _pollingInterval: 4000,
      _fastQueryDate: 1652546508081,
      connection: [Object],
      _nextId: 42,
      _hardhatProvider: [BackwardsCompatibilityProviderAdapter],
      _eventLoopCache: [Object],
      _network: [Object],
      _internalBlockNumber: [Promise],
      _fastBlockNumber: 4,
      _fastBlockNumberPromise: [Promise],
      _poller: Timeout {
        _idleTimeout: 4000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 5500,
        _onTimeout: [Function (anonymous)],
        _timerArgs: undefined,
        _repeat: 4000,
        _destroyed: false,
        [Symbol(refed)]: true,
        [Symbol(kHasPrimitive)]: false,
        [Symbol(asyncId)]: 1495,
        [Symbol(triggerId)]: 0
      },
      _bootstrapPoll: null
    }
  },
  callStatic: {
    'allowance(address,address)': [Function (anonymous)],
    'approve(address,uint256)': [Function (anonymous)],
    'balanceOf(address)': [Function (anonymous)],
    'decimals()': [Function (anonymous)],
    'decreaseAllowance(address,uint256)': [Function (anonymous)],
    'increaseAllowance(address,uint256)': [Function (anonymous)],
    'name()': [Function (anonymous)],
    'symbol()': [Function (anonymous)],
    'totalSupply()': [Function (anonymous)],
    'transfer(address,uint256)': [Function (anonymous)],
    'transferFrom(address,address,uint256)': [Function (anonymous)],
    allowance: [Function (anonymous)],
    approve: [Function (anonymous)],
    balanceOf: [Function (anonymous)],
    decimals: [Function (anonymous)],
    decreaseAllowance: [Function (anonymous)],
    increaseAllowance: [Function (anonymous)],
    name: [Function (anonymous)],
    symbol: [Function (anonymous)],
    totalSupply: [Function (anonymous)],
    transfer: [Function (anonymous)],
    transferFrom: [Function (anonymous)]
  },
  estimateGas: {
    'allowance(address,address)': [Function (anonymous)],
    'approve(address,uint256)': [Function (anonymous)],
    'balanceOf(address)': [Function (anonymous)],
    'decimals()': [Function (anonymous)],
    'decreaseAllowance(address,uint256)': [Function (anonymous)],
    'increaseAllowance(address,uint256)': [Function (anonymous)],
    'name()': [Function (anonymous)],
    'symbol()': [Function (anonymous)],
    'totalSupply()': [Function (anonymous)],
    'transfer(address,uint256)': [Function (anonymous)],
    'transferFrom(address,address,uint256)': [Function (anonymous)],
    allowance: [Function (anonymous)],
    approve: [Function (anonymous)],
    balanceOf: [Function (anonymous)],
    decimals: [Function (anonymous)],
    decreaseAllowance: [Function (anonymous)],
    increaseAllowance: [Function (anonymous)],
    name: [Function (anonymous)],
    symbol: [Function (anonymous)],
    totalSupply: [Function (anonymous)],
    transfer: [Function (anonymous)],
    transferFrom: [Function (anonymous)]
  },
  functions: {
    'allowance(address,address)': [Function (anonymous)],
    'approve(address,uint256)': [Function (anonymous)],
    'balanceOf(address)': [Function (anonymous)],
    'decimals()': [Function (anonymous)],
    'decreaseAllowance(address,uint256)': [Function (anonymous)],
    'increaseAllowance(address,uint256)': [Function (anonymous)],
    'name()': [Function (anonymous)],
    'symbol()': [Function (anonymous)],
    'totalSupply()': [Function (anonymous)],
    'transfer(address,uint256)': [Function (anonymous)],
    'transferFrom(address,address,uint256)': [Function (anonymous)],
    allowance: [Function (anonymous)],
    approve: [Function (anonymous)],
    balanceOf: [Function (anonymous)],
    decimals: [Function (anonymous)],
    decreaseAllowance: [Function (anonymous)],
    increaseAllowance: [Function (anonymous)],
    name: [Function (anonymous)],
    symbol: [Function (anonymous)],
    totalSupply: [Function (anonymous)],
    transfer: [Function (anonymous)],
    transferFrom: [Function (anonymous)]
  },
  populateTransaction: {
    'allowance(address,address)': [Function (anonymous)],
    'approve(address,uint256)': [Function (anonymous)],
    'balanceOf(address)': [Function (anonymous)],
    'decimals()': [Function (anonymous)],
    'decreaseAllowance(address,uint256)': [Function (anonymous)],
    'increaseAllowance(address,uint256)': [Function (anonymous)],
    'name()': [Function (anonymous)],
    'symbol()': [Function (anonymous)],
    'totalSupply()': [Function (anonymous)],
    'transfer(address,uint256)': [Function (anonymous)],
    'transferFrom(address,address,uint256)': [Function (anonymous)],
    allowance: [Function (anonymous)],
    approve: [Function (anonymous)],
    balanceOf: [Function (anonymous)],
    decimals: [Function (anonymous)],
    decreaseAllowance: [Function (anonymous)],
    increaseAllowance: [Function (anonymous)],
    name: [Function (anonymous)],
    symbol: [Function (anonymous)],
    totalSupply: [Function (anonymous)],
    transfer: [Function (anonymous)],
    transferFrom: [Function (anonymous)]
  },
  filters: {
    'Approval(address,address,uint256)': [Function (anonymous)],
    'Transfer(address,address,uint256)': [Function (anonymous)],
    Approval: [Function (anonymous)],
    Transfer: [Function (anonymous)]
  },
  _runningEvents: {},
  _wrappedEmits: {},
  address: '0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9',
  resolvedAddress: Promise { '0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9' },
  'allowance(address,address)': [Function (anonymous)],
  'approve(address,uint256)': [Function (anonymous)],
  'balanceOf(address)': [Function (anonymous)],
  'decimals()': [Function (anonymous)],
  'decreaseAllowance(address,uint256)': [Function (anonymous)],
  'increaseAllowance(address,uint256)': [Function (anonymous)],
  'name()': [Function (anonymous)],
  'symbol()': [Function (anonymous)],
  'totalSupply()': [Function (anonymous)],
  'transfer(address,uint256)': [Function (anonymous)],
  'transferFrom(address,address,uint256)': [Function (anonymous)],
  allowance: [Function (anonymous)],
  approve: [Function (anonymous)],
  balanceOf: [Function (anonymous)],
  decimals: [Function (anonymous)],
  decreaseAllowance: [Function (anonymous)],
  increaseAllowance: [Function (anonymous)],
  name: [Function (anonymous)],
  symbol: [Function (anonymous)],
  totalSupply: [Function (anonymous)],
  transfer: [Function (anonymous)],
  transferFrom: [Function (anonymous)],
  deployTransaction: {
    hash: '0xe13571ab760c81656bc0514880edc1971f7c242df019066d6d65e3dcb98fc810',
    type: 2,
    accessList: [],
    blockHash: '0x3c1eb14c23b0a45c78afbd5ab543431050f1411c32f570d7569050421fb16ae4',
    blockNumber: 5,
    transactionIndex: 0,
    confirmations: 1,
    from: '0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266',
    gasPrice: BigNumber { value: "1530947657" },
    maxPriorityFeePerGas: BigNumber { value: "1000000000" },
    maxFeePerGas: BigNumber { value: "2061895314" },
    gasLimit: BigNumber { value: "1245060" },
    to: null,
    value: BigNumber { value: "0" },
    nonce: 4,
    data: '0x60806040523480156200001157600080fd5b5060405162001a1938038062001a1983398181016040528101906200003791906200032b565b8282816003908051906020019062000051929190620001f2565b5080600490805190602001906200006a929190620001f2565b5050506200007f33826200008860201b60201c565b50505062000684565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415620000fb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000f290620003eb565b60405180910390fd5b6200010f60008383620001ed60201b60201c565b80600260008282546200012391906200049a565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546200017a91906200049a565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051620001e191906200040d565b60405180910390a35050565b505050565b828054620002009062000537565b90600052602060002090601f01602090048101928262000224576000855562000270565b82601f106200023f57805160ff191683800117855562000270565b8280016001018555821562000270579182015b828111156200026f57825182559160200191906001019062000252565b5b5090506200027f919062000283565b5090565b5b808211156200029e57600081600090555060010162000284565b5090565b6000620002b9620002b38462000453565b6200042a565b905082815260208101848484011115620002d257600080fd5b620002df84828562000501565b509392505050565b600082601f830112620002f957600080fd5b81516200030b848260208601620002a2565b91505092915050565b60008151905062000325816200066a565b92915050565b6000806000606084860312156200034157600080fd5b600084015167ffffffffffffffff8111156200035c57600080fd5b6200036a86828701620002e7565b935050602084015167ffffffffffffffff8111156200038857600080fd5b6200039686828701620002e7565b9250506040620003a98682870162000314565b9150509250925092565b6000620003c2601f8362000489565b9150620003cf8262000641565b602082019050919050565b620003e581620004f7565b82525050565b600060208201905081810360008301526200040681620003b3565b9050919050565b6000602082019050620004246000830184620003da565b92915050565b60006200043662000449565b90506200044482826200056d565b919050565b6000604051905090565b600067ffffffffffffffff82111562000471576200047062000601565b5b6200047c8262000630565b9050602081019050919050565b600082825260208201905092915050565b6000620004a782620004f7565b9150620004b483620004f7565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115620004ec57620004eb620005a3565b5b828201905092915050565b6000819050919050565b60005b838110156200052157808201518184015260208101905062000504565b8381111562000531576000848401525b50505050565b600060028204905060018216806200055057607f821691505b60208210811415620005675762000566620005d2565b5b50919050565b620005788262000630565b810181811067ffffffffffffffff821117156200059a576200059962000601565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b6200067581620004f7565b81146200068157600080fd5b50565b61138580620006946000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461016857806370a082311461019857806395d89b41146101c8578063a457c2d7146101e6578063a9059cbb14610216578063dd62ed3e14610246576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610276565b6040516100c39190610e25565b60405180910390f35b6100e660048036038101906100e19190610c73565b610308565b6040516100f39190610e0a565b60405180910390f35b610104610326565b6040516101119190610f27565b60405180910390f35b610134600480360381019061012f9190610c24565b610330565b6040516101419190610e0a565b60405180910390f35b610152610428565b60405161015f9190610f42565b60405180910390f35b610182600480360381019061017d9190610c73565b610431565b60405161018f9190610e0a565b60405180910390f35b6101b260048036038101906101ad9190610bbf565b6104dd565b6040516101bf9190610f27565b60405180910390f35b6101d0610525565b6040516101dd9190610e25565b60405180910390f35b61020060048036038101906101fb9190610c73565b6105b7565b60405161020d9190610e0a565b60405180910390f35b610230600480360381019061022b9190610c73565b6106a2565b60405161023d9190610e0a565b60405180910390f35b610260600480360381019061025b9190610be8565b6106c0565b60405161026d9190610f27565b60405180910390f35b60606003805461028590611057565b80601f01602080910402602001604051908101604052809291908181526020018280546102b190611057565b80156102fe5780601f106102d3576101008083540402835291602001916102fe565b820191906000526020600020905b8154815290600101906020018083116102e157829003601f168201915b5050505050905090565b600061031c610315610747565b848461074f565b6001905092915050565b6000600254905090565b600061033d84848461091a565b6000600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000610388610747565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015610408576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ff90610ea7565b60405180910390fd5b61041c85610414610747565b85840361074f565b60019150509392505050565b60006012905090565b60006104d361043e610747565b84846001600061044c610747565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546104ce9190610f79565b61074f565b6001905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606004805461053490611057565b80601f016020809104026020016040519081016040528092919081815260200182805461056090611057565b80156105ad5780601f10610582576101008083540402835291602001916105ad565b820191906000526020600020905b81548152906001019060200180831161059057829003601f168201915b5050505050905090565b600080600160006105c6610747565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015610683576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067a90610f07565b60405180910390fd5b61069761068e610747565b8585840361074f565b600191505092915050565b60006106b66106af610747565b848461091a565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156107bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b690610ee7565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561082f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082690610e67565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258360405161090d9190610f27565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561098a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161098190610ec7565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156109fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109f190610e47565b60405180910390fd5b610a05838383610b90565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610a8b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a8290610e87565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610b1e9190610f79565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610b829190610f27565b60405180910390a350505050565b505050565b600081359050610ba481611321565b92915050565b600081359050610bb981611338565b92915050565b600060208284031215610bd157600080fd5b6000610bdf84828501610b95565b91505092915050565b60008060408385031215610bfb57600080fd5b6000610c0985828601610b95565b9250506020610c1a85828601610b95565b9150509250929050565b600080600060608486031215610c3957600080fd5b6000610c4786828701610b95565b9350506020610c5886828701610b95565b9250506040610c6986828701610baa565b9150509250925092565b60008060408385031215610c8657600080fd5b6000610c9485828601610b95565b9250506020610ca585828601610baa565b9150509250929050565b610cb881610fe1565b82525050565b6000610cc982610f5d565b610cd38185610f68565b9350610ce3818560208601611024565b610cec816110e7565b840191505092915050565b6000610d04602383610f68565b9150610d0f826110f8565b604082019050919050565b6000610d27602283610f68565b9150610d3282611147565b604082019050919050565b6000610d4a602683610f68565b9150610d5582611196565b604082019050919050565b6000610d6d602883610f68565b9150610d78826111e5565b604082019050919050565b6000610d90602583610f68565b9150610d9b82611234565b604082019050919050565b6000610db3602483610f68565b9150610dbe82611283565b604082019050919050565b6000610dd6602583610f68565b9150610de1826112d2565b604082019050919050565b610df58161100d565b82525050565b610e0481611017565b82525050565b6000602082019050610e1f6000830184610caf565b92915050565b60006020820190508181036000830152610e3f8184610cbe565b905092915050565b60006020820190508181036000830152610e6081610cf7565b9050919050565b60006020820190508181036000830152610e8081610d1a565b9050919050565b60006020820190508181036000830152610ea081610d3d565b9050919050565b60006020820190508181036000830152610ec081610d60565b9050919050565b60006020820190508181036000830152610ee081610d83565b9050919050565b60006020820190508181036000830152610f0081610da6565b9050919050565b60006020820190508181036000830152610f2081610dc9565b9050919050565b6000602082019050610f3c6000830184610dec565b92915050565b6000602082019050610f576000830184610dfb565b92915050565b600081519050919050565b600082825260208201905092915050565b6000610f848261100d565b9150610f8f8361100d565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610fc457610fc3611089565b5b828201905092915050565b6000610fda82610fed565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b83811015611042578082015181840152602081019050611027565b83811115611051576000848401525b50505050565b6000600282049050600182168061106f57607f821691505b60208210811415611083576110826110b8565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206160008201527f6c6c6f77616e6365000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b61132a81610fcf565b811461133557600080fd5b50565b6113418161100d565b811461134c57600080fd5b5056fea26469706673582212205b5de9a0d46024191144911e15239614afb2ef1b4d52c5918c080b6d1857d09b64736f6c63430008040033000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000d3c21bcecceda10000000000000000000000000000000000000000000000000000000000000000000005546f6b656e0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002546b000000000000000000000000000000000000000000000000000000000000',
    r: '0x09cb6ec4b5ea882224b5ef4e8272ce659acf8f1b9b8a9b187773982f8882bbbf',
    s: '0x6fdf09425642edbbd661ba8454fd4e5bef4a5895260315afba2c61887341b5c2',
    v: 1,
    creates: '0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9',
    chainId: 31337,
    wait: [Function (anonymous)]
  },
  _deployedPromise: Promise { [Circular *1] }
}
      ✔ returns correct price (90ms)
    swapBetweenTokenAndEth
=aaaaaaaa===>> Contract {
  interface: Interface {
    fragments: [
      [ConstructorFragment], [EventFragment],
      [EventFragment],       [EventFragment],
      [FunctionFragment],    [FunctionFragment],
      [FunctionFragment],    [FunctionFragment],
      [FunctionFragment],    [FunctionFragment],
      [FunctionFragment],    [FunctionFragment],
      [FunctionFragment],    [FunctionFragment],
      [FunctionFragment],    [FunctionFragment],
      [FunctionFragment],    [FunctionFragment],
      [FunctionFragment],    [FunctionFragment],
      [FunctionFragment],    [FunctionFragment],
      [FunctionFragment],    [FunctionFragment],
      [FunctionFragment]
    ],
    _abiCoder: AbiCoder { coerceFunc: null },
    functions: {
      'addLiquidity(uint256)': [FunctionFragment],
      'allowance(address,address)': [FunctionFragment],
      'approve(address,uint256)': [FunctionFragment],
      'balanceOf(address)': [FunctionFragment],
      'decimals()': [FunctionFragment],
      'decreaseAllowance(address,uint256)': [FunctionFragment],
      'getAmount(uint256,uint256,uint256)': [FunctionFragment],
      'getBalance()': [FunctionFragment],
      'getEthAmount(uint256)': [FunctionFragment],
      'getPrice(uint256,uint256)': [FunctionFragment],
      'getReserve()': [FunctionFragment],
      'getTokenAmount(uint256)': [FunctionFragment],
      'increaseAllowance(address,uint256)': [FunctionFragment],
      'name()': [FunctionFragment],
      'swapEth2Token(uint256)': [FunctionFragment],
      'swapToken2Eth(uint256,uint256)': [FunctionFragment],
      'symbol()': [FunctionFragment],
      'tokenAddress()': [FunctionFragment],
      'totalSupply()': [FunctionFragment],
      'transfer(address,uint256)': [FunctionFragment],
      'transferFrom(address,address,uint256)': [FunctionFragment]
    },
    errors: {},
    events: {
      'Approval(address,address,uint256)': [EventFragment],
      'From(address)': [EventFragment],
      'Transfer(address,address,uint256)': [EventFragment]
    },
    structs: {},
    deploy: ConstructorFragment {
      name: null,
      type: 'constructor',
      inputs: [Array],
      payable: false,
      stateMutability: 'nonpayable',
      gas: null,
      _isFragment: true
    },
    _isInterface: true
  },
  provider: EthersProviderWrapper {
    _isProvider: true,
    _events: [ [Event], [Event] ],
    _emitted: {
      block: 4,
      't:0x94dbf07128cffad264ce4a75ccd18a8da6207518f122c4f1722e343e3fecde2a': 1,
      't:0xead4c9723ae054a06cd9757b238c781564d9e6d18d423d2be736864812d563d0': 2,
      'b:0x430e07ba8642ad51ba9d445af8152799758779d2aa05521b3a8c53d6af18db33': 4,
      't:0x02e6bd02fa02e2c04849d7335812fdbfbbb967b96332acd85d5f19dcf0caa562': 4,
      't:0xe13571ab760c81656bc0514880edc1971f7c242df019066d6d65e3dcb98fc810': 5,
      't:0xc7a000bdd51eed3130167b1accbb6ff192c0a42ef66add72e67dcaaf84d7d7e0': 6,
      't:0xf91ec14da8258a887f8892df875c7a674ff118801765eab4beac0c7d720509ad': 9
    },
    disableCcipRead: false,
    formatter: Formatter { formats: [Object] },
    anyNetwork: false,
    _networkPromise: Promise { [Object] },
    _maxInternalBlockNumber: 4,
    _lastBlockNumber: 4,
    _maxFilterBlockRange: 10,
    _pollingInterval: 4000,
    _fastQueryDate: 1652546508081,
    connection: { url: 'http://localhost:8545' },
    _nextId: 42,
    _hardhatProvider: BackwardsCompatibilityProviderAdapter {
      _wrapped: [FixedGasProvider],
      _provider: [FixedGasProvider],
      sendAsync: [Function: bound sendAsync],
      send: [Function: bound send],
      _sendJsonRpcRequest: [Function: bound _sendJsonRpcRequest] AsyncFunction
    },
    _eventLoopCache: { detectNetwork: [Promise] },
    _network: { chainId: 31337, name: 'unknown' },
    _internalBlockNumber: Promise { [Object] },
    _fastBlockNumber: 4,
    _fastBlockNumberPromise: Promise { 4 },
    _poller: Timeout {
      _idleTimeout: 4000,
      _idlePrev: [TimersList],
      _idleNext: [TimersList],
      _idleStart: 5500,
      _onTimeout: [Function (anonymous)],
      _timerArgs: undefined,
      _repeat: 4000,
      _destroyed: false,
      [Symbol(refed)]: true,
      [Symbol(kHasPrimitive)]: false,
      [Symbol(asyncId)]: 1495,
      [Symbol(triggerId)]: 0
    },
    _bootstrapPoll: null
  },
  signer: SignerWithAddress {
    _isSigner: true,
    address: '0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266',
    _signer: JsonRpcSigner {
      _isSigner: true,
      provider: [EthersProviderWrapper],
      _address: '0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266',
      _index: null
    },
    provider: EthersProviderWrapper {
      _isProvider: true,
      _events: [Array],
      _emitted: [Object],
      disableCcipRead: false,
      formatter: [Formatter],
      anyNetwork: false,
      _networkPromise: [Promise],
      _maxInternalBlockNumber: 4,
      _lastBlockNumber: 4,
      _maxFilterBlockRange: 10,
      _pollingInterval: 4000,
      _fastQueryDate: 1652546508081,
      connection: [Object],
      _nextId: 42,
      _hardhatProvider: [BackwardsCompatibilityProviderAdapter],
      _eventLoopCache: [Object],
      _network: [Object],
      _internalBlockNumber: [Promise],
      _fastBlockNumber: 4,
      _fastBlockNumberPromise: [Promise],
      _poller: Timeout {
        _idleTimeout: 4000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 5500,
        _onTimeout: [Function (anonymous)],
        _timerArgs: undefined,
        _repeat: 4000,
        _destroyed: false,
        [Symbol(refed)]: true,
        [Symbol(kHasPrimitive)]: false,
        [Symbol(asyncId)]: 1495,
        [Symbol(triggerId)]: 0
      },
      _bootstrapPoll: null
    }
  },
  callStatic: {
    'addLiquidity(uint256)': [Function (anonymous)],
    'allowance(address,address)': [Function (anonymous)],
    'approve(address,uint256)': [Function (anonymous)],
    'balanceOf(address)': [Function (anonymous)],
    'decimals()': [Function (anonymous)],
    'decreaseAllowance(address,uint256)': [Function (anonymous)],
    'getAmount(uint256,uint256,uint256)': [Function (anonymous)],
    'getBalance()': [Function (anonymous)],
    'getEthAmount(uint256)': [Function (anonymous)],
    'getPrice(uint256,uint256)': [Function (anonymous)],
    'getReserve()': [Function (anonymous)],
    'getTokenAmount(uint256)': [Function (anonymous)],
    'increaseAllowance(address,uint256)': [Function (anonymous)],
    'name()': [Function (anonymous)],
    'swapEth2Token(uint256)': [Function (anonymous)],
    'swapToken2Eth(uint256,uint256)': [Function (anonymous)],
    'symbol()': [Function (anonymous)],
    'tokenAddress()': [Function (anonymous)],
    'totalSupply()': [Function (anonymous)],
    'transfer(address,uint256)': [Function (anonymous)],
    'transferFrom(address,address,uint256)': [Function (anonymous)],
    addLiquidity: [Function (anonymous)],
    allowance: [Function (anonymous)],
    approve: [Function (anonymous)],
    balanceOf: [Function (anonymous)],
    decimals: [Function (anonymous)],
    decreaseAllowance: [Function (anonymous)],
    getAmount: [Function (anonymous)],
    getBalance: [Function (anonymous)],
    getEthAmount: [Function (anonymous)],
    getPrice: [Function (anonymous)],
    getReserve: [Function (anonymous)],
    getTokenAmount: [Function (anonymous)],
    increaseAllowance: [Function (anonymous)],
    name: [Function (anonymous)],
    swapEth2Token: [Function (anonymous)],
    swapToken2Eth: [Function (anonymous)],
    symbol: [Function (anonymous)],
    tokenAddress: [Function (anonymous)],
    totalSupply: [Function (anonymous)],
    transfer: [Function (anonymous)],
    transferFrom: [Function (anonymous)]
  },
  estimateGas: {
    'addLiquidity(uint256)': [Function (anonymous)],
    'allowance(address,address)': [Function (anonymous)],
    'approve(address,uint256)': [Function (anonymous)],
    'balanceOf(address)': [Function (anonymous)],
    'decimals()': [Function (anonymous)],
    'decreaseAllowance(address,uint256)': [Function (anonymous)],
    'getAmount(uint256,uint256,uint256)': [Function (anonymous)],
    'getBalance()': [Function (anonymous)],
    'getEthAmount(uint256)': [Function (anonymous)],
    'getPrice(uint256,uint256)': [Function (anonymous)],
    'getReserve()': [Function (anonymous)],
    'getTokenAmount(uint256)': [Function (anonymous)],
    'increaseAllowance(address,uint256)': [Function (anonymous)],
    'name()': [Function (anonymous)],
    'swapEth2Token(uint256)': [Function (anonymous)],
    'swapToken2Eth(uint256,uint256)': [Function (anonymous)],
    'symbol()': [Function (anonymous)],
    'tokenAddress()': [Function (anonymous)],
    'totalSupply()': [Function (anonymous)],
    'transfer(address,uint256)': [Function (anonymous)],
    'transferFrom(address,address,uint256)': [Function (anonymous)],
    addLiquidity: [Function (anonymous)],
    allowance: [Function (anonymous)],
    approve: [Function (anonymous)],
    balanceOf: [Function (anonymous)],
    decimals: [Function (anonymous)],
    decreaseAllowance: [Function (anonymous)],
    getAmount: [Function (anonymous)],
    getBalance: [Function (anonymous)],
    getEthAmount: [Function (anonymous)],
    getPrice: [Function (anonymous)],
    getReserve: [Function (anonymous)],
    getTokenAmount: [Function (anonymous)],
    increaseAllowance: [Function (anonymous)],
    name: [Function (anonymous)],
    swapEth2Token: [Function (anonymous)],
    swapToken2Eth: [Function (anonymous)],
    symbol: [Function (anonymous)],
    tokenAddress: [Function (anonymous)],
    totalSupply: [Function (anonymous)],
    transfer: [Function (anonymous)],
    transferFrom: [Function (anonymous)]
  },
  functions: {
    'addLiquidity(uint256)': [Function (anonymous)],
    'allowance(address,address)': [Function (anonymous)],
    'approve(address,uint256)': [Function (anonymous)],
    'balanceOf(address)': [Function (anonymous)],
    'decimals()': [Function (anonymous)],
    'decreaseAllowance(address,uint256)': [Function (anonymous)],
    'getAmount(uint256,uint256,uint256)': [Function (anonymous)],
    'getBalance()': [Function (anonymous)],
    'getEthAmount(uint256)': [Function (anonymous)],
    'getPrice(uint256,uint256)': [Function (anonymous)],
    'getReserve()': [Function (anonymous)],
    'getTokenAmount(uint256)': [Function (anonymous)],
    'increaseAllowance(address,uint256)': [Function (anonymous)],
    'name()': [Function (anonymous)],
    'swapEth2Token(uint256)': [Function (anonymous)],
    'swapToken2Eth(uint256,uint256)': [Function (anonymous)],
    'symbol()': [Function (anonymous)],
    'tokenAddress()': [Function (anonymous)],
    'totalSupply()': [Function (anonymous)],
    'transfer(address,uint256)': [Function (anonymous)],
    'transferFrom(address,address,uint256)': [Function (anonymous)],
    addLiquidity: [Function (anonymous)],
    allowance: [Function (anonymous)],
    approve: [Function (anonymous)],
    balanceOf: [Function (anonymous)],
    decimals: [Function (anonymous)],
    decreaseAllowance: [Function (anonymous)],
    getAmount: [Function (anonymous)],
    getBalance: [Function (anonymous)],
    getEthAmount: [Function (anonymous)],
    getPrice: [Function (anonymous)],
    getReserve: [Function (anonymous)],
    getTokenAmount: [Function (anonymous)],
    increaseAllowance: [Function (anonymous)],
    name: [Function (anonymous)],
    swapEth2Token: [Function (anonymous)],
    swapToken2Eth: [Function (anonymous)],
    symbol: [Function (anonymous)],
    tokenAddress: [Function (anonymous)],
    totalSupply: [Function (anonymous)],
    transfer: [Function (anonymous)],
    transferFrom: [Function (anonymous)]
  },
  populateTransaction: {
    'addLiquidity(uint256)': [Function (anonymous)],
    'allowance(address,address)': [Function (anonymous)],
    'approve(address,uint256)': [Function (anonymous)],
    'balanceOf(address)': [Function (anonymous)],
    'decimals()': [Function (anonymous)],
    'decreaseAllowance(address,uint256)': [Function (anonymous)],
    'getAmount(uint256,uint256,uint256)': [Function (anonymous)],
    'getBalance()': [Function (anonymous)],
    'getEthAmount(uint256)': [Function (anonymous)],
    'getPrice(uint256,uint256)': [Function (anonymous)],
    'getReserve()': [Function (anonymous)],
    'getTokenAmount(uint256)': [Function (anonymous)],
    'increaseAllowance(address,uint256)': [Function (anonymous)],
    'name()': [Function (anonymous)],
    'swapEth2Token(uint256)': [Function (anonymous)],
    'swapToken2Eth(uint256,uint256)': [Function (anonymous)],
    'symbol()': [Function (anonymous)],
    'tokenAddress()': [Function (anonymous)],
    'totalSupply()': [Function (anonymous)],
    'transfer(address,uint256)': [Function (anonymous)],
    'transferFrom(address,address,uint256)': [Function (anonymous)],
    addLiquidity: [Function (anonymous)],
    allowance: [Function (anonymous)],
    approve: [Function (anonymous)],
    balanceOf: [Function (anonymous)],
    decimals: [Function (anonymous)],
    decreaseAllowance: [Function (anonymous)],
    getAmount: [Function (anonymous)],
    getBalance: [Function (anonymous)],
    getEthAmount: [Function (anonymous)],
    getPrice: [Function (anonymous)],
    getReserve: [Function (anonymous)],
    getTokenAmount: [Function (anonymous)],
    increaseAllowance: [Function (anonymous)],
    name: [Function (anonymous)],
    swapEth2Token: [Function (anonymous)],
    swapToken2Eth: [Function (anonymous)],
    symbol: [Function (anonymous)],
    tokenAddress: [Function (anonymous)],
    totalSupply: [Function (anonymous)],
    transfer: [Function (anonymous)],
    transferFrom: [Function (anonymous)]
  },
  filters: {
    'Approval(address,address,uint256)': [Function (anonymous)],
    'From(address)': [Function (anonymous)],
    'Transfer(address,address,uint256)': [Function (anonymous)],
    Approval: [Function (anonymous)],
    From: [Function (anonymous)],
    Transfer: [Function (anonymous)]
  },
  _runningEvents: {},
  _wrappedEmits: {},
  address: '0x8A791620dd6260079BF849Dc5567aDC3F2FdC318',
  resolvedAddress: Promise { '0x8A791620dd6260079BF849Dc5567aDC3F2FdC318' },
  'addLiquidity(uint256)': [Function (anonymous)],
  'allowance(address,address)': [Function (anonymous)],
  'approve(address,uint256)': [Function (anonymous)],
  'balanceOf(address)': [Function (anonymous)],
  'decimals()': [Function (anonymous)],
  'decreaseAllowance(address,uint256)': [Function (anonymous)],
  'getAmount(uint256,uint256,uint256)': [Function (anonymous)],
  'getBalance()': [Function (anonymous)],
  'getEthAmount(uint256)': [Function (anonymous)],
  'getPrice(uint256,uint256)': [Function (anonymous)],
  'getReserve()': [Function (anonymous)],
  'getTokenAmount(uint256)': [Function (anonymous)],
  'increaseAllowance(address,uint256)': [Function (anonymous)],
  'name()': [Function (anonymous)],
  'swapEth2Token(uint256)': [Function (anonymous)],
  'swapToken2Eth(uint256,uint256)': [Function (anonymous)],
  'symbol()': [Function (anonymous)],
  'tokenAddress()': [Function (anonymous)],
  'totalSupply()': [Function (anonymous)],
  'transfer(address,uint256)': [Function (anonymous)],
  'transferFrom(address,address,uint256)': [Function (anonymous)],
  addLiquidity: [Function (anonymous)],
  allowance: [Function (anonymous)],
  approve: [Function (anonymous)],
  balanceOf: [Function (anonymous)],
  decimals: [Function (anonymous)],
  decreaseAllowance: [Function (anonymous)],
  getAmount: [Function (anonymous)],
  getBalance: [Function (anonymous)],
  getEthAmount: [Function (anonymous)],
  getPrice: [Function (anonymous)],
  getReserve: [Function (anonymous)],
  getTokenAmount: [Function (anonymous)],
  increaseAllowance: [Function (anonymous)],
  name: [Function (anonymous)],
  swapEth2Token: [Function (anonymous)],
  swapToken2Eth: [Function (anonymous)],
  symbol: [Function (anonymous)],
  tokenAddress: [Function (anonymous)],
  totalSupply: [Function (anonymous)],
  transfer: [Function (anonymous)],
  transferFrom: [Function (anonymous)],
  deployTransaction: {
    hash: '0xbc8271b114852712d2da0d0b1684efa3f7412c7ff434a5252d5e2d0eeb01639f',
    type: 2,
    accessList: [],
    blockHash: '0x2acf0f579e906533d08f859be3b48ab17f82658ae06bac2364b2c2713f93fba7',
    blockNumber: 10,
    transactionIndex: 0,
    confirmations: 1,
    from: '0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266',
    gasPrice: BigNumber { value: "1285235112" },
    maxPriorityFeePerGas: BigNumber { value: "1000000000" },
    maxFeePerGas: BigNumber { value: "1570470224" },
    gasLimit: BigNumber { value: "2252546" },
    to: null,
    value: BigNumber { value: "0" },
    nonce: 9,
    data: '',
    r: '0x889d6c02e07ab317fc067ac7648b1eae064c23cbaa51c538aae59aff39be5bed',
    s: '0x62d57d25a2315b22236d516b6b103cdbfb21af421db663fe026e9f07f7c8b737',
    v: 0,
    creates: '0x8A791620dd6260079BF849Dc5567aDC3F2FdC318',
    chainId: 31337,
    wait: [Function (anonymous)]
  }
} <ref *1> Contract {
  interface: Interface {
    fragments: [
      [ConstructorFragment],
      [EventFragment],
      [EventFragment],
      [FunctionFragment],
      [FunctionFragment],
      [FunctionFragment],
      [FunctionFragment],
      [FunctionFragment],
      [FunctionFragment],
      [FunctionFragment],
      [FunctionFragment],
      [FunctionFragment],
      [FunctionFragment],
      [FunctionFragment]
    ],
    _abiCoder: AbiCoder { coerceFunc: null },
    functions: {
      'allowance(address,address)': [FunctionFragment],
      'approve(address,uint256)': [FunctionFragment],
      'balanceOf(address)': [FunctionFragment],
      'decimals()': [FunctionFragment],
      'decreaseAllowance(address,uint256)': [FunctionFragment],
      'increaseAllowance(address,uint256)': [FunctionFragment],
      'name()': [FunctionFragment],
      'symbol()': [FunctionFragment],
      'totalSupply()': [FunctionFragment],
      'transfer(address,uint256)': [FunctionFragment],
      'transferFrom(address,address,uint256)': [FunctionFragment]
    },
    errors: {},
    events: {
      'Approval(address,address,uint256)': [EventFragment],
      'Transfer(address,address,uint256)': [EventFragment]
    },
    structs: {},
    deploy: ConstructorFragment {
      name: null,
      type: 'constructor',
      inputs: [Array],
      payable: false,
      stateMutability: 'nonpayable',
      gas: null,
      _isFragment: true
    },
    _isInterface: true
  },
  provider: EthersProviderWrapper {
    _isProvider: true,
    _events: [ [Event], [Event] ],
    _emitted: {
      block: 4,
      't:0x94dbf07128cffad264ce4a75ccd18a8da6207518f122c4f1722e343e3fecde2a': 1,
      't:0xead4c9723ae054a06cd9757b238c781564d9e6d18d423d2be736864812d563d0': 2,
      'b:0x430e07ba8642ad51ba9d445af8152799758779d2aa05521b3a8c53d6af18db33': 4,
      't:0x02e6bd02fa02e2c04849d7335812fdbfbbb967b96332acd85d5f19dcf0caa562': 4,
      't:0xe13571ab760c81656bc0514880edc1971f7c242df019066d6d65e3dcb98fc810': 5,
      't:0xc7a000bdd51eed3130167b1accbb6ff192c0a42ef66add72e67dcaaf84d7d7e0': 6,
      't:0xf91ec14da8258a887f8892df875c7a674ff118801765eab4beac0c7d720509ad': 9
    },
    disableCcipRead: false,
    formatter: Formatter { formats: [Object] },
    anyNetwork: false,
    _networkPromise: Promise { [Object] },
    _maxInternalBlockNumber: 4,
    _lastBlockNumber: 4,
    _maxFilterBlockRange: 10,
    _pollingInterval: 4000,
    _fastQueryDate: 1652546508081,
    connection: { url: 'http://localhost:8545' },
    _nextId: 42,
    _hardhatProvider: BackwardsCompatibilityProviderAdapter {
      _wrapped: [FixedGasProvider],
      _provider: [FixedGasProvider],
      sendAsync: [Function: bound sendAsync],
      send: [Function: bound send],
      _sendJsonRpcRequest: [Function: bound _sendJsonRpcRequest] AsyncFunction
    },
    _eventLoopCache: { detectNetwork: [Promise] },
    _network: { chainId: 31337, name: 'unknown' },
    _internalBlockNumber: Promise { [Object] },
    _fastBlockNumber: 4,
    _fastBlockNumberPromise: Promise { 4 },
    _poller: Timeout {
      _idleTimeout: 4000,
      _idlePrev: [TimersList],
      _idleNext: [TimersList],
      _idleStart: 5500,
      _onTimeout: [Function (anonymous)],
      _timerArgs: undefined,
      _repeat: 4000,
      _destroyed: false,
      [Symbol(refed)]: true,
      [Symbol(kHasPrimitive)]: false,
      [Symbol(asyncId)]: 1495,
      [Symbol(triggerId)]: 0
    },
    _bootstrapPoll: null
  },
  signer: SignerWithAddress {
    _isSigner: true,
    address: '0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266',
    _signer: JsonRpcSigner {
      _isSigner: true,
      provider: [EthersProviderWrapper],
      _address: '0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266',
      _index: null
    },
    provider: EthersProviderWrapper {
      _isProvider: true,
      _events: [Array],
      _emitted: [Object],
      disableCcipRead: false,
      formatter: [Formatter],
      anyNetwork: false,
      _networkPromise: [Promise],
      _maxInternalBlockNumber: 4,
      _lastBlockNumber: 4,
      _maxFilterBlockRange: 10,
      _pollingInterval: 4000,
      _fastQueryDate: 1652546508081,
      connection: [Object],
      _nextId: 42,
      _hardhatProvider: [BackwardsCompatibilityProviderAdapter],
      _eventLoopCache: [Object],
      _network: [Object],
      _internalBlockNumber: [Promise],
      _fastBlockNumber: 4,
      _fastBlockNumberPromise: [Promise],
      _poller: Timeout {
        _idleTimeout: 4000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 5500,
        _onTimeout: [Function (anonymous)],
        _timerArgs: undefined,
        _repeat: 4000,
        _destroyed: false,
        [Symbol(refed)]: true,
        [Symbol(kHasPrimitive)]: false,
        [Symbol(asyncId)]: 1495,
        [Symbol(triggerId)]: 0
      },
      _bootstrapPoll: null
    }
  },
  callStatic: {
    'allowance(address,address)': [Function (anonymous)],
    'approve(address,uint256)': [Function (anonymous)],
    'balanceOf(address)': [Function (anonymous)],
    'decimals()': [Function (anonymous)],
    'decreaseAllowance(address,uint256)': [Function (anonymous)],
    'increaseAllowance(address,uint256)': [Function (anonymous)],
    'name()': [Function (anonymous)],
    'symbol()': [Function (anonymous)],
    'totalSupply()': [Function (anonymous)],
    'transfer(address,uint256)': [Function (anonymous)],
    'transferFrom(address,address,uint256)': [Function (anonymous)],
    allowance: [Function (anonymous)],
    approve: [Function (anonymous)],
    balanceOf: [Function (anonymous)],
    decimals: [Function (anonymous)],
    decreaseAllowance: [Function (anonymous)],
    increaseAllowance: [Function (anonymous)],
    name: [Function (anonymous)],
    symbol: [Function (anonymous)],
    totalSupply: [Function (anonymous)],
    transfer: [Function (anonymous)],
    transferFrom: [Function (anonymous)]
  },
  estimateGas: {
    'allowance(address,address)': [Function (anonymous)],
    'approve(address,uint256)': [Function (anonymous)],
    'balanceOf(address)': [Function (anonymous)],
    'decimals()': [Function (anonymous)],
    'decreaseAllowance(address,uint256)': [Function (anonymous)],
    'increaseAllowance(address,uint256)': [Function (anonymous)],
    'name()': [Function (anonymous)],
    'symbol()': [Function (anonymous)],
    'totalSupply()': [Function (anonymous)],
    'transfer(address,uint256)': [Function (anonymous)],
    'transferFrom(address,address,uint256)': [Function (anonymous)],
    allowance: [Function (anonymous)],
    approve: [Function (anonymous)],
    balanceOf: [Function (anonymous)],
    decimals: [Function (anonymous)],
    decreaseAllowance: [Function (anonymous)],
    increaseAllowance: [Function (anonymous)],
    name: [Function (anonymous)],
    symbol: [Function (anonymous)],
    totalSupply: [Function (anonymous)],
    transfer: [Function (anonymous)],
    transferFrom: [Function (anonymous)]
  },
  functions: {
    'allowance(address,address)': [Function (anonymous)],
    'approve(address,uint256)': [Function (anonymous)],
    'balanceOf(address)': [Function (anonymous)],
    'decimals()': [Function (anonymous)],
    'decreaseAllowance(address,uint256)': [Function (anonymous)],
    'increaseAllowance(address,uint256)': [Function (anonymous)],
    'name()': [Function (anonymous)],
    'symbol()': [Function (anonymous)],
    'totalSupply()': [Function (anonymous)],
    'transfer(address,uint256)': [Function (anonymous)],
    'transferFrom(address,address,uint256)': [Function (anonymous)],
    allowance: [Function (anonymous)],
    approve: [Function (anonymous)],
    balanceOf: [Function (anonymous)],
    decimals: [Function (anonymous)],
    decreaseAllowance: [Function (anonymous)],
    increaseAllowance: [Function (anonymous)],
    name: [Function (anonymous)],
    symbol: [Function (anonymous)],
    totalSupply: [Function (anonymous)],
    transfer: [Function (anonymous)],
    transferFrom: [Function (anonymous)]
  },
  populateTransaction: {
    'allowance(address,address)': [Function (anonymous)],
    'approve(address,uint256)': [Function (anonymous)],
    'balanceOf(address)': [Function (anonymous)],
    'decimals()': [Function (anonymous)],
    'decreaseAllowance(address,uint256)': [Function (anonymous)],
    'increaseAllowance(address,uint256)': [Function (anonymous)],
    'name()': [Function (anonymous)],
    'symbol()': [Function (anonymous)],
    'totalSupply()': [Function (anonymous)],
    'transfer(address,uint256)': [Function (anonymous)],
    'transferFrom(address,address,uint256)': [Function (anonymous)],
    allowance: [Function (anonymous)],
    approve: [Function (anonymous)],
    balanceOf: [Function (anonymous)],
    decimals: [Function (anonymous)],
    decreaseAllowance: [Function (anonymous)],
    increaseAllowance: [Function (anonymous)],
    name: [Function (anonymous)],
    symbol: [Function (anonymous)],
    totalSupply: [Function (anonymous)],
    transfer: [Function (anonymous)],
    transferFrom: [Function (anonymous)]
  },
  filters: {
    'Approval(address,address,uint256)': [Function (anonymous)],
    'Transfer(address,address,uint256)': [Function (anonymous)],
    Approval: [Function (anonymous)],
    Transfer: [Function (anonymous)]
  },
  _runningEvents: {},
  _wrappedEmits: {},
  address: '0x2279B7A0a67DB372996a5FaB50D91eAA73d2eBe6',
  resolvedAddress: Promise { '0x2279B7A0a67DB372996a5FaB50D91eAA73d2eBe6' },
  'allowance(address,address)': [Function (anonymous)],
  'approve(address,uint256)': [Function (anonymous)],
  'balanceOf(address)': [Function (anonymous)],
  'decimals()': [Function (anonymous)],
  'decreaseAllowance(address,uint256)': [Function (anonymous)],
  'increaseAllowance(address,uint256)': [Function (anonymous)],
  'name()': [Function (anonymous)],
  'symbol()': [Function (anonymous)],
  'totalSupply()': [Function (anonymous)],
  'transfer(address,uint256)': [Function (anonymous)],
  'transferFrom(address,address,uint256)': [Function (anonymous)],
  allowance: [Function (anonymous)],
  approve: [Function (anonymous)],
  balanceOf: [Function (anonymous)],
  decimals: [Function (anonymous)],
  decreaseAllowance: [Function (anonymous)],
  increaseAllowance: [Function (anonymous)],
  name: [Function (anonymous)],
  symbol: [Function (anonymous)],
  totalSupply: [Function (anonymous)],
  transfer: [Function (anonymous)],
  transferFrom: [Function (anonymous)],
  deployTransaction: {
    hash: '0xf91ec14da8258a887f8892df875c7a674ff118801765eab4beac0c7d720509ad',
    type: 2,
    accessList: [],
    blockHash: '0x5a5865fbc35a729d9704946b1571e0310910079dbfa72460eb6d686cf9fc76bd',
    blockNumber: 9,
    transactionIndex: 0,
    confirmations: 1,
    from: '0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266',
    gasPrice: BigNumber { value: "1322162869" },
    maxPriorityFeePerGas: BigNumber { value: "1000000000" },
    maxFeePerGas: BigNumber { value: "1644325738" },
    gasLimit: BigNumber { value: "1245060" },
    to: null,
    value: BigNumber { value: "0" },
    nonce: 8,
    data: '0x60806040523480156200001157600080fd5b5060405162001a1938038062001a1983398181016040528101906200003791906200032b565b8282816003908051906020019062000051929190620001f2565b5080600490805190602001906200006a929190620001f2565b5050506200007f33826200008860201b60201c565b50505062000684565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415620000fb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000f290620003eb565b60405180910390fd5b6200010f60008383620001ed60201b60201c565b80600260008282546200012391906200049a565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546200017a91906200049a565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051620001e191906200040d565b60405180910390a35050565b505050565b828054620002009062000537565b90600052602060002090601f01602090048101928262000224576000855562000270565b82601f106200023f57805160ff191683800117855562000270565b8280016001018555821562000270579182015b828111156200026f57825182559160200191906001019062000252565b5b5090506200027f919062000283565b5090565b5b808211156200029e57600081600090555060010162000284565b5090565b6000620002b9620002b38462000453565b6200042a565b905082815260208101848484011115620002d257600080fd5b620002df84828562000501565b509392505050565b600082601f830112620002f957600080fd5b81516200030b848260208601620002a2565b91505092915050565b60008151905062000325816200066a565b92915050565b6000806000606084860312156200034157600080fd5b600084015167ffffffffffffffff8111156200035c57600080fd5b6200036a86828701620002e7565b935050602084015167ffffffffffffffff8111156200038857600080fd5b6200039686828701620002e7565b9250506040620003a98682870162000314565b9150509250925092565b6000620003c2601f8362000489565b9150620003cf8262000641565b602082019050919050565b620003e581620004f7565b82525050565b600060208201905081810360008301526200040681620003b3565b9050919050565b6000602082019050620004246000830184620003da565b92915050565b60006200043662000449565b90506200044482826200056d565b919050565b6000604051905090565b600067ffffffffffffffff82111562000471576200047062000601565b5b6200047c8262000630565b9050602081019050919050565b600082825260208201905092915050565b6000620004a782620004f7565b9150620004b483620004f7565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115620004ec57620004eb620005a3565b5b828201905092915050565b6000819050919050565b60005b838110156200052157808201518184015260208101905062000504565b8381111562000531576000848401525b50505050565b600060028204905060018216806200055057607f821691505b60208210811415620005675762000566620005d2565b5b50919050565b620005788262000630565b810181811067ffffffffffffffff821117156200059a576200059962000601565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b6200067581620004f7565b81146200068157600080fd5b50565b61138580620006946000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461016857806370a082311461019857806395d89b41146101c8578063a457c2d7146101e6578063a9059cbb14610216578063dd62ed3e14610246576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610276565b6040516100c39190610e25565b60405180910390f35b6100e660048036038101906100e19190610c73565b610308565b6040516100f39190610e0a565b60405180910390f35b610104610326565b6040516101119190610f27565b60405180910390f35b610134600480360381019061012f9190610c24565b610330565b6040516101419190610e0a565b60405180910390f35b610152610428565b60405161015f9190610f42565b60405180910390f35b610182600480360381019061017d9190610c73565b610431565b60405161018f9190610e0a565b60405180910390f35b6101b260048036038101906101ad9190610bbf565b6104dd565b6040516101bf9190610f27565b60405180910390f35b6101d0610525565b6040516101dd9190610e25565b60405180910390f35b61020060048036038101906101fb9190610c73565b6105b7565b60405161020d9190610e0a565b60405180910390f35b610230600480360381019061022b9190610c73565b6106a2565b60405161023d9190610e0a565b60405180910390f35b610260600480360381019061025b9190610be8565b6106c0565b60405161026d9190610f27565b60405180910390f35b60606003805461028590611057565b80601f01602080910402602001604051908101604052809291908181526020018280546102b190611057565b80156102fe5780601f106102d3576101008083540402835291602001916102fe565b820191906000526020600020905b8154815290600101906020018083116102e157829003601f168201915b5050505050905090565b600061031c610315610747565b848461074f565b6001905092915050565b6000600254905090565b600061033d84848461091a565b6000600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000610388610747565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015610408576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ff90610ea7565b60405180910390fd5b61041c85610414610747565b85840361074f565b60019150509392505050565b60006012905090565b60006104d361043e610747565b84846001600061044c610747565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546104ce9190610f79565b61074f565b6001905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606004805461053490611057565b80601f016020809104026020016040519081016040528092919081815260200182805461056090611057565b80156105ad5780601f10610582576101008083540402835291602001916105ad565b820191906000526020600020905b81548152906001019060200180831161059057829003601f168201915b5050505050905090565b600080600160006105c6610747565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015610683576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067a90610f07565b60405180910390fd5b61069761068e610747565b8585840361074f565b600191505092915050565b60006106b66106af610747565b848461091a565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156107bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b690610ee7565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561082f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082690610e67565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258360405161090d9190610f27565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561098a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161098190610ec7565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156109fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109f190610e47565b60405180910390fd5b610a05838383610b90565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610a8b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a8290610e87565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610b1e9190610f79565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610b829190610f27565b60405180910390a350505050565b505050565b600081359050610ba481611321565b92915050565b600081359050610bb981611338565b92915050565b600060208284031215610bd157600080fd5b6000610bdf84828501610b95565b91505092915050565b60008060408385031215610bfb57600080fd5b6000610c0985828601610b95565b9250506020610c1a85828601610b95565b9150509250929050565b600080600060608486031215610c3957600080fd5b6000610c4786828701610b95565b9350506020610c5886828701610b95565b9250506040610c6986828701610baa565b9150509250925092565b60008060408385031215610c8657600080fd5b6000610c9485828601610b95565b9250506020610ca585828601610baa565b9150509250929050565b610cb881610fe1565b82525050565b6000610cc982610f5d565b610cd38185610f68565b9350610ce3818560208601611024565b610cec816110e7565b840191505092915050565b6000610d04602383610f68565b9150610d0f826110f8565b604082019050919050565b6000610d27602283610f68565b9150610d3282611147565b604082019050919050565b6000610d4a602683610f68565b9150610d5582611196565b604082019050919050565b6000610d6d602883610f68565b9150610d78826111e5565b604082019050919050565b6000610d90602583610f68565b9150610d9b82611234565b604082019050919050565b6000610db3602483610f68565b9150610dbe82611283565b604082019050919050565b6000610dd6602583610f68565b9150610de1826112d2565b604082019050919050565b610df58161100d565b82525050565b610e0481611017565b82525050565b6000602082019050610e1f6000830184610caf565b92915050565b60006020820190508181036000830152610e3f8184610cbe565b905092915050565b60006020820190508181036000830152610e6081610cf7565b9050919050565b60006020820190508181036000830152610e8081610d1a565b9050919050565b60006020820190508181036000830152610ea081610d3d565b9050919050565b60006020820190508181036000830152610ec081610d60565b9050919050565b60006020820190508181036000830152610ee081610d83565b9050919050565b60006020820190508181036000830152610f0081610da6565b9050919050565b60006020820190508181036000830152610f2081610dc9565b9050919050565b6000602082019050610f3c6000830184610dec565b92915050565b6000602082019050610f576000830184610dfb565b92915050565b600081519050919050565b600082825260208201905092915050565b6000610f848261100d565b9150610f8f8361100d565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610fc457610fc3611089565b5b828201905092915050565b6000610fda82610fed565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b83811015611042578082015181840152602081019050611027565b83811115611051576000848401525b50505050565b6000600282049050600182168061106f57607f821691505b60208210811415611083576110826110b8565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206160008201527f6c6c6f77616e6365000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b61132a81610fcf565b811461133557600080fd5b50565b6113418161100d565b811461134c57600080fd5b5056fea26469706673582212205b5de9a0d46024191144911e15239614afb2ef1b4d52c5918c080b6d1857d09b64736f6c63430008040033000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000d3c21bcecceda10000000000000000000000000000000000000000000000000000000000000000000005546f6b656e0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002546b000000000000000000000000000000000000000000000000000000000000',
    r: '0xe1bfa9f2f5a3df71b40df2fca562f4591964478649ae2eadd3bc22b6aee5cfdb',
    s: '0x4439a674fbb6ac15ec43c5ff28f492a4568022ec80e3e2db6de47495987ac4b6',
    v: 1,
    creates: '0x2279B7A0a67DB372996a5FaB50D91eAA73d2eBe6',
    chainId: 31337,
    wait: [Function (anonymous)]
  },
  _deployedPromise: Promise { [Circular *1] }
}
0.497512437810945273
      ✔ return correct eth amount (130ms)


  3 passing (6s)

